Index: app/src/main/java/RecyclerView.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/RecyclerView.kt b/app/src/main/java/RecyclerView.kt
new file mode 100644
--- /dev/null	(date 1744480454271)
+++ b/app/src/main/java/RecyclerView.kt	(date 1744480454271)
@@ -0,0 +1,38 @@
+package com.pant.girly
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import android.widget.TextView
+import androidx.recyclerview.widget.RecyclerView
+
+class RecyclerView {
+
+
+    class BluetoothDeviceAdapter(private val deviceList: List<BluetoothDeviceInfo>, private val itemClickListener: (BluetoothDeviceInfo) -> Unit) :
+        RecyclerView.Adapter<BluetoothDeviceAdapter.ViewHolder>() {
+
+        class ViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView) {
+            val nameTextView: TextView = itemView.findViewById(android.R.id.text1)
+            val addressTextView: TextView = itemView.findViewById(android.R.id.text2)
+
+            fun bind(deviceInfo: BluetoothDeviceInfo, clickListener: (BluetoothDeviceInfo) -> Unit) {
+                nameTextView.text = deviceInfo.name ?: "Unknown Device"
+                addressTextView.text = deviceInfo.address
+                itemView.setOnClickListener { clickListener(deviceInfo) }
+            }
+        }
+
+        override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ViewHolder {
+            val itemView = LayoutInflater.from(parent.context)
+                .inflate(android.R.layout.simple_list_item_2, parent, false)
+            return ViewHolder(itemView)
+        }
+
+        override fun onBindViewHolder(holder: ViewHolder, position: Int) {
+            val currentDevice = deviceList[position]
+            holder.bind(currentDevice, itemClickListener)
+        }
+
+        override fun getItemCount() = deviceList.size
+    }
+}
\ No newline at end of file
Index: app/src/main/java/UserData.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/UserData.kt b/app/src/main/java/UserData.kt
new file mode 100644
--- /dev/null	(date 1743528441304)
+++ b/app/src/main/java/UserData.kt	(date 1743528441304)
@@ -0,0 +1,8 @@
+package com.pant.girly
+
+data class UserData(
+    val name: String = "",
+    val phone: String = "",
+    val address: String = "",
+    val profileImageUrl: String = "" // Optional for profile picture
+)
\ No newline at end of file
Index: app/src/main/res/menu/toolbar_menu.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/menu/toolbar_menu.xml b/app/src/main/res/menu/toolbar_menu.xml
new file mode 100644
--- /dev/null	(date 1744049038047)
+++ b/app/src/main/res/menu/toolbar_menu.xml	(date 1744049038047)
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="utf-8"?>
+<menu xmlns:tools="http://schemas.android.com/tools"
+    xmlns:android="http://schemas.android.com/apk/res/android">
+    <item
+        android:id="@+id/action_settings"
+        android:title="Settings"
+        android:icon="@drawable/ic_settings"
+        android:showAsAction="ifRoom"
+        tools:ignore="AppCompatResource" />
+
+
+</menu>
Index: app/src/main/res/menu/profile_menu.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/menu/profile_menu.xml b/app/src/main/res/menu/profile_menu.xml
new file mode 100644
--- /dev/null	(date 1743517650709)
+++ b/app/src/main/res/menu/profile_menu.xml	(date 1743517650709)
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="utf-8"?>
+<menu xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto">
+    <item
+        android:id="@+id/action_edit"
+        android:icon="@drawable/ic_edit"
+        android:title="Edit"
+        app:showAsAction="ifRoom"/>
+</menu>
\ No newline at end of file
Index: app/src/main/res/drawable/circle_bg.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/circle_bg.xml b/app/src/main/res/drawable/circle_bg.xml
new file mode 100644
--- /dev/null	(date 1745350976676)
+++ b/app/src/main/res/drawable/circle_bg.xml	(date 1745350976676)
@@ -0,0 +1,5 @@
+<shape xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shape="oval">
+    <solid android:color="@color/light_gray"/>
+    <stroke android:width="2dp" android:color="@color/white"/>
+</shape>
\ No newline at end of file
Index: app/src/main/res/menu/bottom_nav_menu.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/menu/bottom_nav_menu.xml b/app/src/main/res/menu/bottom_nav_menu.xml
new file mode 100644
--- /dev/null	(date 1743530757062)
+++ b/app/src/main/res/menu/bottom_nav_menu.xml	(date 1743530757062)
@@ -0,0 +1,15 @@
+<?xml version="1.0" encoding="utf-8"?>
+<menu xmlns:android="http://schemas.android.com/apk/res/android">
+    <item
+        android:id="@+id/nav_home"
+        android:icon="@drawable/ic_home"
+        android:title="Home" />
+    <item
+        android:id="@+id/nav_community"
+        android:icon="@drawable/ic_community"
+        android:title="Community" />
+    <item
+        android:id="@+id/nav_me"
+        android:icon="@drawable/ic_profile"
+        android:title="Profile" />
+</menu>
\ No newline at end of file
Index: app/src/main/res/color/nav_icon_selector.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/color/nav_icon_selector.xml b/app/src/main/res/color/nav_icon_selector.xml
new file mode 100644
--- /dev/null	(date 1743529540997)
+++ b/app/src/main/res/color/nav_icon_selector.xml	(date 1743529540997)
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<selector xmlns:android="http://schemas.android.com/apk/res/android">
+    <item android:color="@color/nav_icon_selected" android:state_checked="true"/>
+    <item android:color="@color/nav_icon_unselected"/>
+</selector>
\ No newline at end of file
Index: app/src/main/res/color/background.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/color/background.xml b/app/src/main/res/color/background.xml
new file mode 100644
--- /dev/null	(date 1743564160816)
+++ b/app/src/main/res/color/background.xml	(date 1743564160816)
@@ -0,0 +1,4 @@
+<?xml version="1.0" encoding="utf-8"?>
+<selector xmlns:android="http://schemas.android.com/apk/res/android">
+
+</selector>
\ No newline at end of file
Index: app/src/main/res/color/nav_text_selector.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/color/nav_text_selector.xml b/app/src/main/res/color/nav_text_selector.xml
new file mode 100644
--- /dev/null	(date 1743529557536)
+++ b/app/src/main/res/color/nav_text_selector.xml	(date 1743529557536)
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<selector xmlns:android="http://schemas.android.com/apk/res/android">
+    <item android:color="@color/nav_text_selected" android:state_checked="true"/>
+    <item android:color="@color/nav_text_unselected"/>
+</selector>
\ No newline at end of file
Index: app/src/main/res/layout/profile_option_item.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/profile_option_item.xml b/app/src/main/res/layout/profile_option_item.xml
new file mode 100644
--- /dev/null	(date 1743931765665)
+++ b/app/src/main/res/layout/profile_option_item.xml	(date 1743931765665)
@@ -0,0 +1,61 @@
+<?xml version="1.0" encoding="utf-8"?>
+<com.google.android.material.card.MaterialCardView
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:layout_marginBottom="8dp"
+    app:cardCornerRadius="12dp"
+    app:cardElevation="2dp"
+    android:foreground="?attr/selectableItemBackground"
+    android:clickable="true">
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:orientation="horizontal"
+        android:gravity="center_vertical"
+        android:padding="12dp">
+
+        <!-- Left Icon -->
+        <ImageView
+            android:id="@+id/ivOptionIcon"
+            android:layout_width="24dp"
+            android:layout_height="24dp"
+            android:layout_marginEnd="12dp"
+            android:src="@drawable/ic_profile"
+            app:tint="@color/purple_500" />
+
+        <!-- Text Section -->
+        <LinearLayout
+            android:layout_width="0dp"
+            android:layout_height="wrap_content"
+            android:layout_weight="1"
+            android:orientation="vertical">
+
+            <TextView
+                android:id="@+id/tvOptionTitle"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:text="Profile Option"
+                android:textSize="14sp"
+                android:textColor="@android:color/black"
+                android:textStyle="bold" />
+
+            <TextView
+                android:id="@+id/tvOptionSubtitle"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:text="Subtitle here"
+                android:textSize="12sp"
+                android:textColor="@android:color/darker_gray" />
+        </LinearLayout>
+
+        <!-- Right Chevron -->
+        <ImageView
+            android:layout_width="20dp"
+            android:layout_height="20dp"
+            android:src="@drawable/ic_chevron_right"
+            app:tint="@color/gray" />
+    </LinearLayout>
+</com.google.android.material.card.MaterialCardView>
Index: app/src/main/res/layout/activity_emergency_contacts.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_emergency_contacts.xml b/app/src/main/res/layout/activity_emergency_contacts.xml
new file mode 100644
--- /dev/null	(date 1745001227606)
+++ b/app/src/main/res/layout/activity_emergency_contacts.xml	(date 1745001227606)
@@ -0,0 +1,83 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="#FFF0F5"
+    android:orientation="vertical"
+    android:padding="20dp"
+    tools:context=".EmergencyContactsActivity">
+
+    <TextView
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:text="Emergency Contacts"
+        android:textColor="#C2185B"
+        android:textSize="24sp"
+        android:textStyle="bold"
+        android:gravity="center"
+        android:layout_marginBottom="24dp" />
+
+    <!-- Card-style input -->
+    <androidx.cardview.widget.CardView
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        app:cardCornerRadius="16dp"
+        app:cardElevation="4dp"
+        android:layout_marginBottom="16dp"
+        android:backgroundTint="#FFFFFF">
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:orientation="vertical"
+            android:padding="16dp">
+
+            <com.google.android.material.textfield.TextInputLayout
+                style="@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:hint="Contact Name">
+
+                <com.google.android.material.textfield.TextInputEditText
+                    android:id="@+id/etContactName"
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content" />
+            </com.google.android.material.textfield.TextInputLayout>
+
+            <com.google.android.material.textfield.TextInputLayout
+                style="@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:hint="Phone Number"
+                android:layout_marginTop="12dp">
+
+                <com.google.android.material.textfield.TextInputEditText
+                    android:id="@+id/etContactPhone"
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:inputType="phone" />
+            </com.google.android.material.textfield.TextInputLayout>
+
+            <com.google.android.material.button.MaterialButton
+                android:id="@+id/btnAddContact"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:text="Add Contact"
+                android:layout_marginTop="16dp"
+                app:cornerRadius="12dp"
+                android:textColor="#FFFFFF"
+                android:backgroundTint="#C2185B" />
+        </LinearLayout>
+    </androidx.cardview.widget.CardView>
+
+    <!-- RecyclerView for contacts -->
+    <androidx.recyclerview.widget.RecyclerView
+        android:id="@+id/rvEmergencyContacts"
+        android:layout_width="match_parent"
+        android:layout_height="0dp"
+        android:layout_weight="1"
+        android:layout_marginTop="8dp"
+        tools:listitem="@layout/item_emergency_contact" />
+</LinearLayout>
Index: app/src/main/res/layout/activity_live_video.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_live_video.xml b/app/src/main/res/layout/activity_live_video.xml
new file mode 100644
--- /dev/null	(date 1745350068212)
+++ b/app/src/main/res/layout/activity_live_video.xml	(date 1745350068212)
@@ -0,0 +1,127 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:id="@+id/liveVideoLayout"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="@android:color/white"
+    android:padding="16dp"
+    tools:context=".LiveVideoActivity">
+
+    <!-- Camera Preview -->
+    <androidx.camera.view.PreviewView
+        android:id="@+id/previewView"
+        android:layout_width="match_parent"
+        android:layout_height="380dp"
+        android:layout_alignParentTop="true"
+        android:layout_centerHorizontal="true"
+        android:background="#000"
+        android:elevation="6dp"
+        android:layout_marginBottom="16dp"
+        android:layout_marginTop="8dp" />
+
+    <!-- Controls Container -->
+    <LinearLayout
+        android:id="@+id/controlsContainer"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_below="@id/previewView"
+        android:layout_marginTop="16dp"
+        android:orientation="vertical">
+
+        <!-- Toggles Row -->
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:orientation="horizontal"
+            android:weightSum="2"
+            android:gravity="center">
+
+            <!-- Audio Toggle -->
+            <Switch
+                android:id="@+id/switchAudio"
+                android:layout_width="0dp"
+                android:layout_height="wrap_content"
+                android:layout_weight="1"
+                android:text="Enable Audio"
+                android:textSize="16sp"
+                app:switchPadding="8dp" />
+
+            <!-- Video Toggle -->
+            <Switch
+                android:id="@+id/switchVideo"
+                android:layout_width="0dp"
+                android:layout_height="wrap_content"
+                android:layout_weight="1"
+                android:text="Enable Video"
+                android:textSize="16sp"
+                app:switchPadding="8dp" />
+        </LinearLayout>
+
+        <!-- Buttons Row -->
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="24dp"
+            android:gravity="center"
+            android:orientation="horizontal">
+
+            <!-- Start Recording Button -->
+            <Button
+                android:id="@+id/btnStartRecording"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_marginEnd="16dp"
+                android:background="@drawable/rounded_button_start"
+                android:minWidth="120dp"
+                android:paddingHorizontal="16dp"
+                android:paddingVertical="12dp"
+                android:text="Start Recording"
+                android:textAllCaps="false"
+                android:textColor="@android:color/white"
+                android:textSize="16sp" />
+
+            <!-- Stop Recording Button -->
+            <Button
+                android:id="@+id/btnStopRecording"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:background="@drawable/rounded_button_stop"
+                android:minWidth="120dp"
+                android:paddingHorizontal="16dp"
+                android:paddingVertical="12dp"
+                android:text="Stop"
+                android:textAllCaps="false"
+                android:textColor="@android:color/white"
+                android:textSize="16sp" />
+        </LinearLayout>
+
+        <!-- Snapshot Button -->
+        <ImageButton
+            android:id="@+id/btnCaptureSnapshot"
+            android:layout_width="56dp"
+            android:layout_height="56dp"
+            android:layout_gravity="center"
+            android:layout_marginTop="24dp"
+            android:background="@drawable/circle_button_bg"
+            android:contentDescription="Take snapshot"
+            android:elevation="8dp"
+            android:padding="12dp"
+            android:scaleType="centerInside"
+            android:src="@drawable/ic_camera" />
+
+        <!-- Status Indicator -->
+        <TextView
+            android:id="@+id/txtRecordingStatus"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_gravity="center"
+            android:layout_marginTop="16dp"
+            android:text="Ready"
+            android:textColor="@color/deep_pink"
+            android:textSize="14sp"
+            android:textStyle="bold" />
+    </LinearLayout>
+
+</RelativeLayout>
\ No newline at end of file
Index: app/src/main/res/layout/activity_anonymous_report.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_anonymous_report.xml b/app/src/main/res/layout/activity_anonymous_report.xml
new file mode 100644
--- /dev/null	(date 1743961847222)
+++ b/app/src/main/res/layout/activity_anonymous_report.xml	(date 1743961847222)
@@ -0,0 +1,28 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:orientation="vertical"
+    android:padding="24dp"
+    android:background="#FFF3E0"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <EditText
+        android:id="@+id/reportInput"
+        android:hint="Describe the issue anonymously..."
+        android:minHeight="200dp"
+        android:gravity="top"
+        android:background="@drawable/edittext_bg"
+        android:padding="12dp"
+        android:textSize="16sp"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content" />
+
+    <Button
+        android:id="@+id/sendReportButton"
+        android:text="Send Report"
+        android:layout_marginTop="16dp"
+        android:backgroundTint="@color/deep_pink"
+        android:textColor="#FFFFFF"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content" />
+</LinearLayout>
Index: app/src/main/res/layout/activity_add_watch.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_add_watch.xml b/app/src/main/res/layout/activity_add_watch.xml
new file mode 100644
--- /dev/null	(date 1743959071609)
+++ b/app/src/main/res/layout/activity_add_watch.xml	(date 1743959071609)
@@ -0,0 +1,23 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:orientation="vertical"
+    android:padding="24dp"
+    android:background="@color/light_pink"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <TextView
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:text="Smart Watch Integration"
+        android:textSize="22sp"
+        android:textColor="@color/deep_pink"
+        android:textStyle="bold"
+        android:layout_marginBottom="16dp" />
+
+    <TextView
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:text="This section will help connect your smartwatch with safety features."
+        android:textSize="16sp" />
+</LinearLayout>
Index: app/src/main/res/layout/item_emergency_contact.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/item_emergency_contact.xml b/app/src/main/res/layout/item_emergency_contact.xml
new file mode 100644
--- /dev/null	(date 1743932982399)
+++ b/app/src/main/res/layout/item_emergency_contact.xml	(date 1743932982399)
@@ -0,0 +1,53 @@
+<?xml version="1.0" encoding="utf-8"?>
+<com.google.android.material.card.MaterialCardView
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:layout_margin="8dp"
+    app:cardCornerRadius="8dp"
+    app:cardElevation="2dp">
+
+    <RelativeLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:padding="16dp">
+
+        <LinearLayout
+            android:layout_width="0dp"
+            android:layout_height="wrap_content"
+            android:layout_toStartOf="@id/btnDeleteContact"
+            android:layout_alignParentStart="true"
+            android:orientation="vertical"
+            android:layout_toLeftOf="@id/btnDeleteContact"
+            android:layout_alignParentLeft="true"
+            android:layout_marginEnd="48dp"> <!-- Add margin to avoid overlapping -->
+
+
+            <TextView
+                android:id="@+id/tvContactName"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:textColor="@color/black"
+                android:textSize="16sp"
+                android:textStyle="bold"/>
+
+            <TextView
+                android:id="@+id/tvContactPhone"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_marginTop="4dp"
+                android:textColor="@color/gray"/>
+        </LinearLayout>
+
+        <ImageButton
+            android:id="@+id/btnDeleteContact"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_alignParentEnd="true"
+            android:layout_centerVertical="true"
+            android:background="?attr/selectableItemBackgroundBorderless"
+            android:src="@drawable/ic_delete"
+            app:tint="@color/red" />
+    </RelativeLayout>
+</com.google.android.material.card.MaterialCardView>
\ No newline at end of file
Index: app/src/main/res/layout/activity_otp_verification.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_otp_verification.xml b/app/src/main/res/layout/activity_otp_verification.xml
new file mode 100644
--- /dev/null	(date 1743318232030)
+++ b/app/src/main/res/layout/activity_otp_verification.xml	(date 1743318232030)
@@ -0,0 +1,25 @@
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical"
+    android:padding="20dp">
+
+    <EditText
+        android:id="@+id/etOtp"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:hint="Enter OTP"
+        android:inputType="number" />
+
+    <Button
+        android:id="@+id/btnVerifyOtp"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:text="Verify OTP" />
+
+    <Button
+        android:id="@+id/btnVerifyEmail"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:text="Verify via Email" />
+</LinearLayout>
Index: app/src/main/res/layout/activity_edit_profile.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_edit_profile.xml b/app/src/main/res/layout/activity_edit_profile.xml
new file mode 100644
--- /dev/null	(date 1743526509528)
+++ b/app/src/main/res/layout/activity_edit_profile.xml	(date 1743526509528)
@@ -0,0 +1,79 @@
+<?xml version="1.0" encoding="utf-8"?>
+<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:padding="16dp">
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:orientation="vertical">
+
+        <de.hdodenhof.circleimageview.CircleImageView
+            android:id="@+id/ivProfile"
+            android:layout_width="100dp"
+            android:layout_height="100dp"
+            android:layout_gravity="center_horizontal"
+            android:layout_marginBottom="16dp"
+            android:src="@drawable/ic_profile_placeholder"
+            app:civ_border_width="2dp"
+            app:civ_border_color="@color/purple_500"/>
+
+        <TextView
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_gravity="center_horizontal"
+            android:text="Change Profile Picture"
+            android:textColor="@color/purple_500"
+            android:layout_marginBottom="24dp"/>
+
+        <com.google.android.material.textfield.TextInputLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginBottom="8dp">
+
+            <com.google.android.material.textfield.TextInputEditText
+                android:id="@+id/etName"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:hint="Full Name"
+                android:inputType="textPersonName"/>
+        </com.google.android.material.textfield.TextInputLayout>
+
+        <com.google.android.material.textfield.TextInputLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginBottom="8dp">
+
+            <com.google.android.material.textfield.TextInputEditText
+                android:id="@+id/etPhone"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:hint="Phone Number"
+                android:inputType="phone"/>
+        </com.google.android.material.textfield.TextInputLayout>
+
+        <com.google.android.material.textfield.TextInputLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginBottom="16dp">
+
+            <com.google.android.material.textfield.TextInputEditText
+                android:id="@+id/etAddress"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:hint="Address"
+                android:inputType="textPostalAddress"/>
+        </com.google.android.material.textfield.TextInputLayout>
+
+        <Button
+            android:id="@+id/btnSave"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:text="Save Changes"
+            style="@style/Widget.MaterialComponents.Button"/>
+
+    </LinearLayout>
+</ScrollView>
\ No newline at end of file
Index: app/src/main/res/layout/activity_registered_address.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_registered_address.xml b/app/src/main/res/layout/activity_registered_address.xml
new file mode 100644
--- /dev/null	(date 1745353508547)
+++ b/app/src/main/res/layout/activity_registered_address.xml	(date 1745353508547)
@@ -0,0 +1,172 @@
+<?xml version="1.0" encoding="utf-8"?>
+<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:fillViewport="true"
+    android:background="@color/white">
+
+
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:orientation="vertical"
+        android:padding="16dp">
+
+        <com.google.android.material.appbar.MaterialToolbar
+            android:id="@+id/toolbar"
+            android:layout_width="match_parent"
+            android:layout_height="?attr/actionBarSize"
+            android:background="@drawable/rounded_toolbar_bg"
+
+            app:title="Registered Address" />
+
+        <!-- Address Card -->
+        <com.google.android.material.card.MaterialCardView
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            app:cardCornerRadius="8dp"
+            app:cardElevation="2dp">
+
+            <LinearLayout
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:orientation="vertical"
+                android:padding="16dp">
+
+                <TextView
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:text="Registered Address"
+                    android:textColor="@color/black"
+                    android:textSize="18sp"
+                    android:textStyle="bold"/>
+
+                <com.google.android.material.textfield.TextInputLayout
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:layout_marginTop="16dp"
+                    android:hint="Address Line 1">
+
+                    <com.google.android.material.textfield.TextInputEditText
+                        android:id="@+id/etAddressLine1"
+                        android:layout_width="match_parent"
+                        android:layout_height="wrap_content"/>
+                </com.google.android.material.textfield.TextInputLayout>
+
+                <com.google.android.material.textfield.TextInputLayout
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:layout_marginTop="8dp"
+                    android:hint="Address Line 2">
+
+                    <com.google.android.material.textfield.TextInputEditText
+                        android:id="@+id/etAddressLine2"
+                        android:layout_width="match_parent"
+                        android:layout_height="wrap_content"/>
+                </com.google.android.material.textfield.TextInputLayout>
+
+                <LinearLayout
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:layout_marginTop="8dp"
+                    android:orientation="horizontal">
+
+                    <com.google.android.material.textfield.TextInputLayout
+                        android:layout_width="0dp"
+                        android:layout_height="wrap_content"
+                        android:layout_weight="1"
+                        android:hint="City">
+
+                        <com.google.android.material.textfield.TextInputEditText
+                            android:id="@+id/etCity"
+                            android:layout_width="match_parent"
+                            android:layout_height="wrap_content"/>
+                    </com.google.android.material.textfield.TextInputLayout>
+
+                    <com.google.android.material.textfield.TextInputLayout
+                        android:layout_width="0dp"
+                        android:layout_height="wrap_content"
+                        android:layout_marginStart="8dp"
+                        android:layout_weight="1"
+                        android:hint="State">
+
+                        <com.google.android.material.textfield.TextInputEditText
+                            android:id="@+id/etState"
+                            android:layout_width="match_parent"
+                            android:layout_height="wrap_content"/>
+                    </com.google.android.material.textfield.TextInputLayout>
+                </LinearLayout>
+
+                <LinearLayout
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:layout_marginTop="8dp"
+                    android:orientation="horizontal">
+
+                    <com.google.android.material.textfield.TextInputLayout
+                        android:layout_width="0dp"
+                        android:layout_height="wrap_content"
+                        android:layout_weight="1"
+                        android:hint="Postal Code">
+
+                        <com.google.android.material.textfield.TextInputEditText
+                            android:id="@+id/etPostalCode"
+                            android:layout_width="match_parent"
+                            android:layout_height="wrap_content"
+                            android:inputType="number"/>
+                    </com.google.android.material.textfield.TextInputLayout>
+
+                    <com.google.android.material.textfield.TextInputLayout
+                        android:layout_width="0dp"
+                        android:layout_height="wrap_content"
+                        android:layout_marginStart="8dp"
+                        android:layout_weight="1"
+                        android:hint="Country">
+
+                        <com.google.android.material.textfield.TextInputEditText
+                            android:id="@+id/etCountry"
+                            android:layout_width="match_parent"
+                            android:layout_height="wrap_content"/>
+                    </com.google.android.material.textfield.TextInputLayout>
+                </LinearLayout>
+
+                <Button
+                    android:id="@+id/btnUseCurrentLocation"
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:layout_marginTop="16dp"
+                    android:text="USE CURRENT LOCATION"
+                    android:textAllCaps="true"
+                    style="@style/Widget.MaterialComponents.Button.OutlinedButton"/>
+
+                <Button
+                    android:id="@+id/btnSaveAddress"
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:layout_marginTop="16dp"
+                    android:text="SAVE ADDRESS"
+                    android:textAllCaps="true"
+                    style="@style/Widget.MaterialComponents.Button"/>
+            </LinearLayout>
+        </com.google.android.material.card.MaterialCardView>
+
+        <!-- Map Preview -->
+        <com.google.android.material.card.MaterialCardView
+            android:layout_width="match_parent"
+            android:layout_height="200dp"
+            android:layout_marginTop="16dp"
+            app:cardCornerRadius="8dp"
+            app:cardElevation="2dp">
+
+            <fragment
+                android:id="@+id/map"
+                android:name="com.google.android.gms.maps.SupportMapFragment"
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+                tools:context=".RegisteredAddressActivity"/>
+        </com.google.android.material.card.MaterialCardView>
+    </LinearLayout>
+</ScrollView>
\ No newline at end of file
Index: app/src/main/res/layout/activity_forgot_password.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_forgot_password.xml b/app/src/main/res/layout/activity_forgot_password.xml
new file mode 100644
--- /dev/null	(date 1744994431355)
+++ b/app/src/main/res/layout/activity_forgot_password.xml	(date 1744994431355)
@@ -0,0 +1,69 @@
+<?xml version="1.0" encoding="utf-8"?>
+<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="#F9F9F9"
+    android:padding="20dp"
+    tools:context=".ForgotPasswordActivity">
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:orientation="vertical"
+        android:gravity="center_horizontal">
+
+        <!-- App Logo -->
+        <ImageView
+            android:id="@+id/logoImage"
+            android:layout_width="100dp"
+            android:layout_height="100dp"
+            android:src="@drawable/app_logo"
+            android:layout_marginBottom="20dp"
+            android:contentDescription="App Logo"/>
+
+        <!-- Title -->
+        <TextView
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="Forgot Password?"
+            android:textSize="22sp"
+            android:textColor="#333333"
+            android:textStyle="bold"
+            android:layout_marginBottom="12dp"/>
+
+        <!-- Email Field -->
+        <EditText
+            android:id="@+id/emailField"
+            android:layout_width="match_parent"
+            android:layout_height="50dp"
+            android:hint="Enter your registered email"
+            android:inputType="textEmailAddress"
+            android:background="@drawable/edittext_bg"
+            android:padding="12dp"
+            android:textColor="#000"
+            android:textColorHint="#888"/>
+
+        <!-- Reset Password Button -->
+        <Button
+            android:id="@+id/resetPasswordButton"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:text="Send Reset Link"
+            android:textAllCaps="false"
+            android:layout_marginTop="20dp"
+            android:backgroundTint="#007AFF"
+            android:textColor="#FFFFFF"/>
+
+        <!-- Loading Indicator -->
+        <ProgressBar
+            android:id="@+id/progressBar"
+            style="?android:attr/progressBarStyleLarge"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:visibility="gone"
+            android:layout_marginTop="20dp"/>
+
+    </LinearLayout>
+</ScrollView>
Index: app/src/main/res/layout/item_sos_alert.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/item_sos_alert.xml b/app/src/main/res/layout/item_sos_alert.xml
new file mode 100644
--- /dev/null	(date 1743527332645)
+++ b/app/src/main/res/layout/item_sos_alert.xml	(date 1743527332645)
@@ -0,0 +1,39 @@
+<?xml version="1.0" encoding="utf-8"?>
+<com.google.android.material.card.MaterialCardView
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:layout_margin="8dp"
+    app:cardCornerRadius="8dp"
+    app:cardElevation="2dp">
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:orientation="vertical"
+        android:padding="16dp">
+
+        <TextView
+            android:id="@+id/tvTime"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:textColor="@color/black"
+            android:textSize="14sp"
+            android:textStyle="bold"/>
+
+        <TextView
+            android:id="@+id/tvLocation"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="4dp"
+            android:textColor="@color/gray"/>
+
+        <TextView
+            android:id="@+id/tvStatus"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="8dp"
+            android:textStyle="bold"/>
+    </LinearLayout>
+</com.google.android.material.card.MaterialCardView>
\ No newline at end of file
Index: app/src/main/res/layout/activity_watch.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_watch.xml b/app/src/main/res/layout/activity_watch.xml
new file mode 100644
--- /dev/null	(date 1744479355611)
+++ b/app/src/main/res/layout/activity_watch.xml	(date 1744479355611)
@@ -0,0 +1,62 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:padding="20dp"
+    android:background="@color/white">
+
+    <TextView
+        android:id="@+id/heartRateTextView"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="Heart Rate: --"
+        android:textSize="20sp"
+        android:textStyle="bold"
+        android:textColor="@color/deep_pink"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintEnd_toEndOf="parent" />
+
+    <EditText
+        android:id="@+id/watchIdEditText"
+        android:layout_width="0dp"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="32dp"
+        android:hint="Enter Watch ID (Optional)"
+        android:inputType="text"
+        app:layout_constraintTop_toBottomOf="@+id/heartRateTextView"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintEnd_toEndOf="parent" />
+
+    <Button
+        android:id="@+id/addWatchButton"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="16dp"
+        android:text="Add Watch ID"
+        app:layout_constraintTop_toBottomOf="@+id/watchIdEditText"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintEnd_toEndOf="parent" />
+
+    <Button
+        android:id="@+id/scanButton"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="Scan for Devices"
+        android:layout_marginTop="16dp"
+        app:layout_constraintTop_toBottomOf="@+id/addWatchButton"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintEnd_toEndOf="parent" />
+
+    <androidx.recyclerview.widget.RecyclerView
+        android:id="@+id/devicesRecyclerView"
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        android:layout_marginTop="16dp"
+        app:layout_constraintTop_toBottomOf="@+id/scanButton"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintBottom_toBottomOf="parent" />
+
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/res/layout/activity_sos_alerts.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_sos_alerts.xml b/app/src/main/res/layout/activity_sos_alerts.xml
new file mode 100644
--- /dev/null	(date 1743525898452)
+++ b/app/src/main/res/layout/activity_sos_alerts.xml	(date 1743525898452)
@@ -0,0 +1,23 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical"
+    android:padding="16dp">
+
+    <TextView
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:text="Your SOS Alerts"
+        android:textSize="20sp"
+        android:textStyle="bold"
+        android:layout_marginBottom="16dp"/>
+
+    <androidx.recyclerview.widget.RecyclerView
+        android:id="@+id/rvSOSAlerts"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        tools:listitem="@layout/item_sos_alert"/>
+
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/res/layout/activity_sos_trigger.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_sos_trigger.xml b/app/src/main/res/layout/activity_sos_trigger.xml
new file mode 100644
--- /dev/null	(date 1743962003463)
+++ b/app/src/main/res/layout/activity_sos_trigger.xml	(date 1743962003463)
@@ -0,0 +1,18 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:orientation="vertical"
+    android:gravity="center"
+    android:background="#FFF5F8"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <Button
+        android:id="@+id/triggerButton"
+        android:text="TRIGGER SOS"
+        android:textSize="18sp"
+        android:padding="16dp"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:backgroundTint="@color/deep_pink"
+        android:textColor="#FFFFFF" />
+</LinearLayout>
Index: app/src/main/res/layout/activity_reset_password.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_reset_password.xml b/app/src/main/res/layout/activity_reset_password.xml
new file mode 100644
--- /dev/null	(date 1743526065765)
+++ b/app/src/main/res/layout/activity_reset_password.xml	(date 1743526065765)
@@ -0,0 +1,33 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical"
+    android:padding="32dp"
+    android:gravity="center">
+
+    <TextView
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:text="Reset Password"
+        android:textAlignment="center"
+        android:textSize="24sp"
+        android:textStyle="bold"
+        android:layout_marginBottom="32dp"/>
+
+    <TextView
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:text="We will send a password reset link to your registered email address"
+        android:textAlignment="center"
+        android:layout_marginBottom="32dp"/>
+
+    <Button
+        android:id="@+id/btnResetPassword"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:text="Send Reset Link"
+        style="@style/Widget.MaterialComponents.Button"/>
+
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/res/layout/activity_live_tracking.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_live_tracking.xml b/app/src/main/res/layout/activity_live_tracking.xml
new file mode 100644
--- /dev/null	(date 1744956706146)
+++ b/app/src/main/res/layout/activity_live_tracking.xml	(date 1744956706146)
@@ -0,0 +1,105 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:card_view="http://schemas.android.com/apk/res-auto"
+    android:id="@+id/layoutRoot"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="#F5F5F5">
+
+    <!-- Google Map Fragment -->
+    <fragment
+        android:id="@+id/mapFragment"
+        android:name="com.google.android.gms.maps.SupportMapFragment"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent" />
+
+    <!-- Bottom Panel as CardView -->
+    <androidx.cardview.widget.CardView
+        android:id="@+id/buttonPanel"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_alignParentBottom="true"
+        card_view:cardElevation="8dp"
+        card_view:cardCornerRadius="16dp"
+        android:layout_margin="12dp"
+        android:background="@android:color/white"
+        android:padding="16dp">
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:orientation="vertical">
+
+            <!-- First Row -->
+            <LinearLayout
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:orientation="horizontal"
+                android:gravity="center"
+                android:layout_marginBottom="12dp"
+                android:weightSum="3">
+
+                <Button
+                    android:id="@+id/btnStartTracking"
+                    style="@style/Widget.MaterialComponents.Button.OutlinedButton"
+                    android:layout_width="0dp"
+                    android:layout_height="wrap_content"
+                    android:layout_weight="1"
+                    android:text="Start"
+                    android:textAllCaps="false"
+                    android:layout_marginEnd="6dp" />
+
+                <Button
+                    android:id="@+id/btnStopTracking"
+                    style="@style/Widget.MaterialComponents.Button.OutlinedButton"
+                    android:layout_width="0dp"
+                    android:layout_height="wrap_content"
+                    android:layout_weight="1"
+                    android:text="Stop"
+                    android:textAllCaps="false"
+                    android:layout_marginEnd="6dp"
+                    android:layout_marginStart="6dp" />
+
+                <Button
+                    android:id="@+id/btnSendLocation"
+                    style="@style/Widget.MaterialComponents.Button.OutlinedButton"
+                    android:layout_width="0dp"
+                    android:layout_height="wrap_content"
+                    android:layout_weight="1"
+                    android:text="Send"
+                    android:textAllCaps="false"
+                    android:layout_marginStart="6dp" />
+            </LinearLayout>
+
+            <!-- Second Row -->
+            <LinearLayout
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:orientation="horizontal"
+                android:gravity="center"
+                android:weightSum="2">
+
+                <Button
+                    android:id="@+id/btnZoomIn"
+                    style="@style/Widget.MaterialComponents.Button.TextButton"
+                    android:layout_width="0dp"
+                    android:layout_height="wrap_content"
+                    android:layout_weight="1"
+                    android:text="Zoom In"
+                    android:textAllCaps="false"
+                    android:layout_marginEnd="6dp" />
+
+                <Button
+                    android:id="@+id/btnZoomOut"
+                    style="@style/Widget.MaterialComponents.Button.TextButton"
+                    android:layout_width="0dp"
+                    android:layout_height="wrap_content"
+                    android:layout_weight="1"
+                    android:text="Zoom Out"
+                    android:textAllCaps="false"
+                    android:layout_marginStart="6dp" />
+            </LinearLayout>
+        </LinearLayout>
+    </androidx.cardview.widget.CardView>
+
+</RelativeLayout>
Index: app/src/main/res/layout/activity_user_info.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_user_info.xml b/app/src/main/res/layout/activity_user_info.xml
new file mode 100644
--- /dev/null	(date 1744998140246)
+++ b/app/src/main/res/layout/activity_user_info.xml	(date 1744998140246)
@@ -0,0 +1,83 @@
+<?xml version="1.0" encoding="utf-8"?>
+<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="#FFF0F5"
+    android:padding="20dp"
+    tools:context=".UserFormActivity">
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:orientation="vertical">
+
+        <androidx.cardview.widget.CardView
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            app:cardCornerRadius="16dp"
+            app:cardElevation="6dp"
+            android:layout_marginBottom="24dp"
+            android:backgroundTint="#FFFFFF">
+
+            <LinearLayout
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:orientation="vertical"
+                android:padding="20dp">
+
+                <com.google.android.material.textfield.TextInputLayout
+                    style="@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox"
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:hint="Full Name"
+                    android:layout_marginBottom="12dp">
+
+                    <com.google.android.material.textfield.TextInputEditText
+                        android:id="@+id/etName"
+                        android:layout_width="match_parent"
+                        android:layout_height="wrap_content"
+                        android:inputType="textPersonName" />
+                </com.google.android.material.textfield.TextInputLayout>
+
+                <com.google.android.material.textfield.TextInputLayout
+                    style="@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox"
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:hint="Phone Number"
+                    android:layout_marginBottom="12dp">
+
+                    <com.google.android.material.textfield.TextInputEditText
+                        android:id="@+id/etPhone"
+                        android:layout_width="match_parent"
+                        android:layout_height="wrap_content"
+                        android:inputType="phone" />
+                </com.google.android.material.textfield.TextInputLayout>
+
+                <com.google.android.material.textfield.TextInputLayout
+                    style="@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox"
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:hint="Address"
+                    android:layout_marginBottom="16dp">
+
+                    <com.google.android.material.textfield.TextInputEditText
+                        android:id="@+id/etAddress"
+                        android:layout_width="match_parent"
+                        android:layout_height="wrap_content"
+                        android:inputType="textPostalAddress" />
+                </com.google.android.material.textfield.TextInputLayout>
+
+                <com.google.android.material.button.MaterialButton
+                    android:id="@+id/btnSave"
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:text="Save Profile"
+                    app:cornerRadius="12dp"
+                    android:textColor="#FFFFFF"
+                    android:backgroundTint="#C2185B" />
+            </LinearLayout>
+        </androidx.cardview.widget.CardView>
+    </LinearLayout>
+</ScrollView>
Index: app/src/main/res/layout/activity_user_form.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_user_form.xml b/app/src/main/res/layout/activity_user_form.xml
new file mode 100644
--- /dev/null	(date 1743515949915)
+++ b/app/src/main/res/layout/activity_user_form.xml	(date 1743515949915)
@@ -0,0 +1,100 @@
+<?xml version="1.0" encoding="utf-8"?>
+<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:padding="20dp">
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:orientation="vertical"
+        android:gravity="center"
+        android:padding="16dp">
+
+        <!-- Profile Image -->
+        <ImageView
+            android:id="@+id/profileImageView"
+            android:layout_width="120dp"
+            android:layout_height="120dp"
+            android:layout_gravity="center"
+            android:scaleType="centerCrop"
+            android:src="@drawable/bg_profile_header"
+            android:background="@android:color/darker_gray"
+            android:contentDescription="Profile Image"
+            android:layout_marginBottom="10dp"/>
+
+        <!-- Upload Image Button -->
+        <Button
+            android:id="@+id/buttonUpload"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="Upload Image"
+            android:layout_marginBottom="16dp"
+            android:backgroundTint="@color/deep_pink"/>
+
+        <!-- Name Input -->
+        <EditText
+            android:id="@+id/editTextName"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:hint="Enter Name"
+            android:inputType="textPersonName"
+            android:background="@android:drawable/editbox_background"
+            android:padding="10dp"
+            android:layout_marginBottom="10dp"/>
+
+        <!-- Age Input -->
+        <EditText
+            android:id="@+id/editTextAge"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:hint="Enter Age"
+            android:inputType="number"
+            android:background="@android:drawable/editbox_background"
+            android:padding="10dp"
+            android:layout_marginBottom="10dp"/>
+
+        <!-- Education Input -->
+        <EditText
+            android:id="@+id/editTextEducation"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:hint="Education or Work"
+            android:inputType="text"
+            android:background="@android:drawable/editbox_background"
+            android:padding="10dp"
+            android:layout_marginBottom="10dp"/>
+
+        <!-- City Input -->
+        <EditText
+            android:id="@+id/editTextCity"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:hint="Enter City"
+            android:inputType="text"
+            android:background="@android:drawable/editbox_background"
+            android:padding="10dp"
+            android:layout_marginBottom="10dp"/>
+
+        <!-- State Input -->
+        <EditText
+            android:id="@+id/editTextState"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:hint="Enter State"
+            android:inputType="text"
+            android:background="@android:drawable/editbox_background"
+            android:padding="10dp"
+            android:layout_marginBottom="10dp"/>
+
+        <!-- Submit Button -->
+        <Button
+            android:id="@+id/buttonSubmit"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:text="Submit"
+            android:backgroundTint="@color/deep_pink"
+            android:textColor="@android:color/white"
+            android:layout_marginTop="20dp"/>
+    </LinearLayout>
+</ScrollView>
Index: app/src/main/res/layout/app_settings_activity.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/app_settings_activity.xml b/app/src/main/res/layout/app_settings_activity.xml
new file mode 100644
--- /dev/null	(date 1745090952960)
+++ b/app/src/main/res/layout/app_settings_activity.xml	(date 1745090952960)
@@ -0,0 +1,191 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="@color/white"
+    android:orientation="vertical">
+
+
+    <androidx.appcompat.widget.Toolbar
+        android:id="@+id/toolbar"
+        android:layout_width="match_parent"
+        android:layout_height="?attr/actionBarSize"
+        android:background="@drawable/rounded_toolbar_bg"
+        android:elevation="5dp"
+        android:title="App Settings"
+        android:titleTextColor="@color/white"/>
+
+
+    <ScrollView
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:fillViewport="true">
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:orientation="vertical"
+            android:padding="16dp">
+
+
+
+
+            <com.google.android.material.card.MaterialCardView
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                app:cardCornerRadius="12dp"
+                app:cardElevation="4dp"
+                android:layout_marginBottom="16dp">
+
+                <LinearLayout
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:orientation="vertical"
+                    android:padding="16dp">
+
+                    <TextView
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:text="Notification Settings"
+                        android:textSize="18sp"
+                        android:textStyle="bold"
+                        android:textColor="@color/black"
+                        android:layout_marginBottom="12dp"/>
+
+
+                    <LinearLayout
+                        android:layout_width="match_parent"
+                        android:layout_height="wrap_content"
+                        android:orientation="horizontal"
+                        android:gravity="center_vertical">
+
+                        <ImageView
+                            android:layout_width="24dp"
+                            android:layout_height="24dp"
+                            android:src="@drawable/ic_notification"
+                            app:tint="@color/icon_tint"/>
+
+                        <TextView
+                            android:layout_width="0dp"
+                            android:layout_height="wrap_content"
+                            android:layout_weight="1"
+                            android:layout_marginStart="16dp"
+                            android:text="Enable Notifications"
+                            android:textColor="@color/black"/>
+
+                        <Switch
+                            android:id="@+id/switchNotifications"
+                            android:layout_width="wrap_content"
+                            android:layout_height="wrap_content"/>
+                    </LinearLayout>
+                </LinearLayout>
+            </com.google.android.material.card.MaterialCardView>
+
+
+            <com.google.android.material.card.MaterialCardView
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                app:cardCornerRadius="12dp"
+                app:cardElevation="4dp"
+                android:layout_marginBottom="16dp">
+
+                <LinearLayout
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:orientation="vertical"
+                    android:padding="16dp">
+
+                    <TextView
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:text="Location Settings"
+                        android:textSize="18sp"
+                        android:textStyle="bold"
+                        android:textColor="@color/black"
+                        android:layout_marginBottom="12dp"/>
+
+
+                    <LinearLayout
+                        android:layout_width="match_parent"
+                        android:layout_height="wrap_content"
+                        android:orientation="horizontal"
+                        android:gravity="center_vertical">
+
+                        <ImageView
+                            android:layout_width="24dp"
+                            android:layout_height="24dp"
+                            android:src="@drawable/ic_location"
+                            app:tint="@color/icon_tint"/>
+
+                        <TextView
+                            android:layout_width="0dp"
+                            android:layout_height="wrap_content"
+                            android:layout_weight="1"
+                            android:layout_marginStart="16dp"
+                            android:text="Enable Location Tracking"
+                            android:textColor="@color/black"/>
+
+                        <Switch
+                            android:id="@+id/switchLocation"
+                            android:layout_width="wrap_content"
+                            android:layout_height="wrap_content"/>
+                    </LinearLayout>
+
+
+                    <LinearLayout
+                        android:layout_width="match_parent"
+                        android:layout_height="wrap_content"
+                        android:layout_marginTop="12dp"
+                        android:orientation="horizontal"
+                        android:gravity="center_vertical">
+
+                        <ImageView
+                            android:layout_width="24dp"
+                            android:layout_height="24dp"
+                            android:src="@drawable/ic_history"
+                            app:tint="@color/icon_tint"/>
+
+                        <TextView
+                            android:layout_width="0dp"
+                            android:layout_height="wrap_content"
+                            android:layout_weight="1"
+                            android:layout_marginStart="16dp"
+                            android:text="View Location History"
+                            android:textColor="@color/black"/>
+
+                        <Button
+                            android:id="@+id/btnViewHistory"
+                            android:layout_width="wrap_content"
+                            android:layout_height="wrap_content"
+                            android:text="View"
+                            style="@style/Widget.MaterialComponents.Button.OutlinedButton"/>
+
+
+                    </LinearLayout>
+                    <Switch
+                        android:id="@+id/switchShakeDetection"
+                        android:layout_width="match_parent"
+                        android:layout_height="wrap_content"
+                        android:text="Enable Shake Detection"
+                        android:textSize="16sp"
+                        android:padding="12dp"
+                        android:layout_marginTop="16dp" />
+                </LinearLayout>
+            </com.google.android.material.card.MaterialCardView>
+
+
+
+
+            <Button
+                android:id="@+id/btnSaveSettings"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_marginTop="24dp"
+                android:text="SAVE SETTINGS"
+                android:textAllCaps="true"
+                style="@style/Widget.MaterialComponents.Button"/>
+        </LinearLayout>
+    </ScrollView>
+</LinearLayout>
Index: app/src/main/res/drawable/error_profile.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/error_profile.xml b/app/src/main/res/drawable/error_profile.xml
new file mode 100644
--- /dev/null	(date 1745351130273)
+++ b/app/src/main/res/drawable/error_profile.xml	(date 1745351130273)
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24">
+    <path
+        android:fillColor="@color/red"
+        android:pathData="M12,2C6.48,2 2,6.48 2,12s4.48,10 10,10 10,-4.48 10,-10S17.52,2 12,2zm1,15h-2v-2h2v2zm0,-4h-2V7h2v6z"/>
+</vector>
\ No newline at end of file
Index: app/src/main/res/drawable/ic_disable.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/ic_disable.xml b/app/src/main/res/drawable/ic_disable.xml
new file mode 100644
--- /dev/null	(date 1745344130820)
+++ b/app/src/main/res/drawable/ic_disable.xml	(date 1745344130820)
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="utf-8"?>
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24">
+    <path
+        android:fillColor="#FF0000"
+        android:pathData="M12,2C6.48,2 2,6.48 2,12s4.48,10 10,10 10,-4.48 10,-10S17.52,2 12,2zM4,12c0,-1.85 0.63,-3.55 1.69,-4.9L16.9,17.31C15.55,18.37 13.85,19 12,19c-3.87,0 -7,-3.13 -7,-7zm14,0c0,1.85 -0.63,3.55 -1.69,4.9L7.1,6.69C8.45,5.63 10.15,5 12,5c3.87,0 7,3.13 7,7z" />
+</vector>
Index: app/src/main/res/values/styles.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/styles.xml b/app/src/main/res/values/styles.xml
new file mode 100644
--- /dev/null	(date 1745347294704)
+++ b/app/src/main/res/values/styles.xml	(date 1745347294704)
@@ -0,0 +1,30 @@
+<resources>
+
+    <!-- Base application theme -->
+    <style name="AppTheme" parent="Theme.MaterialComponents.DayNight.NoActionBar">
+        <item name="colorPrimary">#E91E63</item>
+        <item name="colorPrimaryVariant">#C2185B</item>
+        <item name="colorOnPrimary">#FFFFFF</item>
+        <item name="colorSecondary">#FF4081</item>
+        <item name="colorOnSecondary">#000000</item>
+    </style>
+    <style name="PinkButtonStyle" parent="Widget.MaterialComponents.Button">
+        <item name="backgroundTint">@color/deep_pink</item>
+        <item name="android:textColor">@color/white</item>
+        <item name="cornerRadius">12dp</item>
+        <item name="android:elevation">4dp</item>
+    </style>
+    <style name="PinkFabStyle" parent="Widget.MaterialComponents.FloatingActionButton">
+        <item name="backgroundTint">@color/hot_pink</item>
+        <item name="tint">@color/white</item>
+        <item name="elevation">6dp</item>
+    </style>
+    <style name="EmergencyTheme" parent="Theme.MaterialComponents.DayNight.DarkActionBar">
+        <item name="colorPrimary">@color/sos_red</item>
+        <item name="colorPrimaryVariant">@color/sos_red</item>
+        <item name="colorOnPrimary">@color/white</item>
+        <item name="android:statusBarColor">@color/sos_red</item>
+    </style>
+
+
+</resources>
Index: app/src/main/res/drawable/edittext_bg.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/edittext_bg.xml b/app/src/main/res/drawable/edittext_bg.xml
new file mode 100644
--- /dev/null	(date 1743950442889)
+++ b/app/src/main/res/drawable/edittext_bg.xml	(date 1743950442889)
@@ -0,0 +1,6 @@
+<!-- res/drawable/edittext_bg.xml -->
+<shape xmlns:android="http://schemas.android.com/apk/res/android" android:shape="rectangle">
+    <solid android:color="#FFF"/>
+    <stroke android:width="1dp" android:color="#CCC" />
+    <corners android:radius="10dp"/>
+</shape>
Index: app/src/main/res/drawable/ic_chevron_right.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/ic_chevron_right.xml b/app/src/main/res/drawable/ic_chevron_right.xml
new file mode 100644
--- /dev/null	(date 1743516498582)
+++ b/app/src/main/res/drawable/ic_chevron_right.xml	(date 1743516498582)
@@ -0,0 +1,10 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24"
+    android:tint="?attr/colorControlNormal">
+    <path
+        android:fillColor="@android:color/white"
+        android:pathData="M10,6L8.59,7.41 13.17,12l-4.58,4.59L10,18l6,-6z"/>
+</vector>
\ No newline at end of file
Index: app/src/main/res/drawable/ic_password.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/ic_password.xml b/app/src/main/res/drawable/ic_password.xml
new file mode 100644
--- /dev/null	(date 1743956274924)
+++ b/app/src/main/res/drawable/ic_password.xml	(date 1743956274924)
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24">
+    <path
+        android:fillColor="#808080"
+        android:pathData="M12,17a2,2 0 1,0 0,-4a2,2 0 0,0 0,4zM17,8V6.5C17,4 15,2 12,2s-5,2-5,4.5V8c-1.1,0 -2,0.9 -2,2v10c0,1.1 0.9,2 2,2h10c1.1,0 2,-0.9 2,-2V10c0,-1.1 -0.9,-2 -2,-2zM9,6.5C9,5.1 10.3,4 12,4s3,1.1 3,2.5V8H9V6.5z" />
+</vector>
Index: app/src/main/res/drawable/default_profile.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/default_profile.xml b/app/src/main/res/drawable/default_profile.xml
new file mode 100644
--- /dev/null	(date 1744885042756)
+++ b/app/src/main/res/drawable/default_profile.xml	(date 1744885042756)
@@ -0,0 +1,11 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="100dp"
+    android:height="100dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24">
+
+    <!-- Perfect circle -->
+    <path
+        android:fillColor="#FF888888"
+        android:pathData="M12,2a10,10 0 1,0 0.01,0z" />
+</vector>
Index: app/src/main/res/drawable/ic_eye_closed.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/ic_eye_closed.xml b/app/src/main/res/drawable/ic_eye_closed.xml
new file mode 100644
--- /dev/null	(date 1743950778903)
+++ b/app/src/main/res/drawable/ic_eye_closed.xml	(date 1743950778903)
@@ -0,0 +1,20 @@
+<!-- res/drawable/ic_eye_closed.xml -->
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24">
+
+    <!-- Eye shape -->
+    <path
+        android:fillColor="#757575"
+        android:pathData="M12,4.5c-4.5,0 -8.2,2.9 -10,7 1.8,4.1 5.5,7 10,7s8.2,-2.9 10,-7c-1.8,-4.1 -5.5,-7 -10,-7zM12,16c-2.2,0 -4,-1.8 -4,-4s1.8,-4 4,-4 4,1.8 4,4 -1.8,4 -4,4z" />
+
+    <!-- Strike-through line -->
+    <path
+        android:strokeColor="#757575"
+        android:strokeWidth="2"
+        android:fillColor="@android:color/transparent"
+        android:pathData="M3,3 L21,21" />
+
+</vector>
Index: app/src/main/res/drawable/ic_email.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/ic_email.xml b/app/src/main/res/drawable/ic_email.xml
new file mode 100644
--- /dev/null	(date 1743950898998)
+++ b/app/src/main/res/drawable/ic_email.xml	(date 1743950898998)
@@ -0,0 +1,10 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24">
+
+    <path
+        android:fillColor="#757575"
+        android:pathData="M20,4H4c-1.1,0 -2,0.9 -2,2v12c0,1.1 0.9,2 2,2h16c1.1,0 2,-0.9 2,-2V6c0,-1.1 -0.9,-2 -2,-2zm0,4l-8,5 -8,-5V6l8,5 8,-5v2z"/>
+</vector>
Index: app/src/main/res/drawable/rounded_button_stop.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/rounded_button_stop.xml b/app/src/main/res/drawable/rounded_button_stop.xml
new file mode 100644
--- /dev/null	(date 1744957511501)
+++ b/app/src/main/res/drawable/rounded_button_stop.xml	(date 1744957511501)
@@ -0,0 +1,4 @@
+<shape xmlns:android="http://schemas.android.com/apk/res/android" android:shape="rectangle">
+    <solid android:color="@color/light_blue" />
+    <corners android:radius="20dp" />
+</shape>
Index: app/src/main/res/drawable/edittext_background.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/edittext_background.xml b/app/src/main/res/drawable/edittext_background.xml
new file mode 100644
--- /dev/null	(date 1743956262488)
+++ b/app/src/main/res/drawable/edittext_background.xml	(date 1743956262488)
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android">
+    <solid android:color="#FFFFFF" />
+    <stroke
+        android:width="1dp"
+        android:color="#CCCCCC" />
+    <corners android:radius="10dp" />
+    <padding
+        android:left="10dp"
+        android:top="10dp"
+        android:right="10dp"
+        android:bottom="10dp" />
+</shape>
Index: app/src/main/res/drawable/ic_sound.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/ic_sound.xml b/app/src/main/res/drawable/ic_sound.xml
new file mode 100644
--- /dev/null	(date 1743562962117)
+++ b/app/src/main/res/drawable/ic_sound.xml	(date 1743562962117)
@@ -0,0 +1,10 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24"
+    android:tint="?attr/colorControlNormal">
+    <path
+        android:fillColor="@android:color/white"
+        android:pathData="M3,9v6h4l5,5V4L7,9H3zm13.5,3c0-1.77-1.02-3.29-2.5-4.03v8.05c1.48-0.73 2.5-2.25 2.5-4.02zM14,3.23v2.06c2.89,0.86 5,3.54 5,6.71s-2.11,5.85-5,6.71v2.06c4.01-0.91 7-4.49 7-8.77s-2.99-7.86-7-8.77z"/>
+</vector>
\ No newline at end of file
Index: app/src/main/res/drawable/sos_button_background.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/sos_button_background.xml b/app/src/main/res/drawable/sos_button_background.xml
new file mode 100644
--- /dev/null	(date 1744045906071)
+++ b/app/src/main/res/drawable/sos_button_background.xml	(date 1744045906071)
@@ -0,0 +1,24 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layer-list xmlns:android="http://schemas.android.com/apk/res/android">
+
+    <!-- White Border -->
+    <item>
+        <shape android:shape="oval">
+            <solid android:color="#FFFFFF" />
+        </shape>
+    </item>
+
+    <!-- Red Gradient Fill -->
+    <item android:inset="4dp">
+        <shape android:shape="oval">
+            <gradient
+                android:type="radial"
+                android:gradientRadius="120dp"
+                android:startColor="#FF8A80"
+                android:centerColor="#FF5252"
+                android:endColor="#D50000"
+                android:angle="270" />
+        </shape>
+    </item>
+
+</layer-list>
Index: app/src/main/res/drawable/ic_settings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/ic_settings.xml b/app/src/main/res/drawable/ic_settings.xml
new file mode 100644
--- /dev/null	(date 1743563306490)
+++ b/app/src/main/res/drawable/ic_settings.xml	(date 1743563306490)
@@ -0,0 +1,10 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24"
+    android:tint="?attr/colorControlNormal">
+    <path
+        android:fillColor="@android:color/white"
+        android:pathData="M19.14,12.94c0.04-0.3,0.06-0.61,0.06-0.94c0-0.32-0.02-0.64-0.07-0.94l2.03-1.58c0.18-0.14,0.23-0.41,0.12-0.61 l-1.92-3.32c-0.12-0.22-0.37-0.29-0.59-0.22l-2.39,0.96c-0.5-0.38-1.03-0.7-1.62-0.94L14.4,2.81c-0.04-0.24-0.24-0.41-0.48-0.41 h-3.84c-0.24,0-0.43,0.17-0.47,0.41L9.25,5.35C8.66,5.59,8.12,5.92,7.63,6.29L5.24,5.33c-0.22-0.08-0.47,0-0.59,0.22L2.74,8.87 C2.62,9.08,2.66,9.34,2.86,9.48l2.03,1.58C4.84,11.36,4.8,11.69,4.8,12s0.02,0.64,0.07,0.94l-2.03,1.58 c-0.18,0.14-0.23,0.41-0.12,0.61l1.92,3.32c0.12,0.22,0.37,0.29,0.59,0.22l2.39-0.96c0.5,0.38,1.03,0.7,1.62,0.94l0.36,2.54 c0.05,0.24,0.24,0.41,0.48,0.41h3.84c0.24,0,0.44-0.17,0.47-0.41l0.36-2.54c0.59-0.24,1.13-0.56,1.62-0.94l2.39,0.96 c0.22,0.08,0.47,0,0.59-0.22l1.92-3.32c0.12-0.22,0.07-0.47-0.12-0.61L19.14,12.94zM12,15.6c-1.98,0-3.6-1.62-3.6-3.6 s1.62-3.6,3.6-3.6s3.6,1.62,3.6,3.6S13.98,15.6,12,15.6z"/>
+</vector>
\ No newline at end of file
Index: app/src/main/res/drawable/rounded_button_start.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/rounded_button_start.xml b/app/src/main/res/drawable/rounded_button_start.xml
new file mode 100644
--- /dev/null	(date 1744957500707)
+++ b/app/src/main/res/drawable/rounded_button_start.xml	(date 1744957500707)
@@ -0,0 +1,4 @@
+<shape xmlns:android="http://schemas.android.com/apk/res/android" android:shape="rectangle">
+    <solid android:color="@color/deep_pink" />
+    <corners android:radius="20dp" />
+</shape>
Index: app/src/main/res/drawable/ic_person.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/ic_person.xml b/app/src/main/res/drawable/ic_person.xml
new file mode 100644
--- /dev/null	(date 1743948822410)
+++ b/app/src/main/res/drawable/ic_person.xml	(date 1743948822410)
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24">
+    <path
+        android:fillColor="#FF000000"
+        android:pathData="M12,12c2.21,0 4,-1.79 4,-4s-1.79,-4 -4,-4 -4,1.79 -4,4 1.79,4 4,4zM12,14c-2.67,0 -8,1.34 -8,4v2h16v-2c0,-2.66 -5.33,-4 -8,-4z" />
+</vector>
\ No newline at end of file
Index: app/src/main/res/drawable/ic_profile_placeholder.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/ic_profile_placeholder.xml b/app/src/main/res/drawable/ic_profile_placeholder.xml
new file mode 100644
--- /dev/null	(date 1743527602477)
+++ b/app/src/main/res/drawable/ic_profile_placeholder.xml	(date 1743527602477)
@@ -0,0 +1,10 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24"
+    android:tint="?attr/colorControlNormal">
+    <path
+        android:fillColor="@android:color/white"
+        android:pathData="M12,2C6.48,2 2,6.48 2,12s4.48,10 10,10 10,-4.48 10,-10S17.52,2 12,2zm0,3c1.66,0 3,1.34 3,3s-1.34,3 -3,3 -3,-1.34 -3,-3 1.34,-3 3,-3zm0,14.2c-2.5,0 -4.71,-1.28 -6,-3.22 0.03,-1.99 4,-3.08 6,-3.08 1.99,0 5.97,1.09 6,3.08 -1.29,1.94 -3.5,3.22 -6,3.22z"/>
+</vector>
\ No newline at end of file
Index: app/src/main/res/xml/backup_rules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/xml/backup_rules.xml b/app/src/main/res/xml/backup_rules.xml
new file mode 100644
--- /dev/null	(date 1745348589962)
+++ b/app/src/main/res/xml/backup_rules.xml	(date 1745348589962)
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<full-backup-content>
+    <exclude domain="sharedpref" path="sensitive_prefs.xml"/>
+    <exclude domain="database" path="user_data.db"/>
+</full-backup-content>
\ No newline at end of file
Index: app/src/main/res/drawable/ic_history.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/ic_history.xml b/app/src/main/res/drawable/ic_history.xml
new file mode 100644
--- /dev/null	(date 1743563064043)
+++ b/app/src/main/res/drawable/ic_history.xml	(date 1743563064043)
@@ -0,0 +1,10 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24"
+    android:tint="?attr/colorControlNormal">
+    <path
+        android:fillColor="@android:color/white"
+        android:pathData="M13,3c-4.97,0-9,4.03-9,9H1l3.89,3.89l0.07,0.14L9,12H6c0-3.87,3.13-7,7-7s7,3.13,7,7s-3.13,7-7,7c-1.93,0-3.68-0.79-4.94-2.06l-1.42,1.42C8.27,19.99,10.51,21,13,21c4.97,0,9-4.03,9-9s-4.03-9-9-9zm-1,5v5l4.28,2.54l0.72-1.21l-3.5-2.08V8H12z"/>
+</vector>
\ No newline at end of file
Index: app/src/main/res/drawable/ic_eye_open.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/ic_eye_open.xml b/app/src/main/res/drawable/ic_eye_open.xml
new file mode 100644
--- /dev/null	(date 1743950605755)
+++ b/app/src/main/res/drawable/ic_eye_open.xml	(date 1743950605755)
@@ -0,0 +1,10 @@
+<!-- res/drawable/ic_eye_open.xml -->
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24">
+    <path
+        android:fillColor="#757575"
+        android:pathData="M12,4.5C7,4.5 2.73,7.61 1,12c1.73,4.39 6,7.5 11,7.5s9.27,-3.11 11,-7.5c-1.73,-4.39 -6,-7.5 -11,-7.5zM12,17c-2.76,0 -5,-2.24 -5,-5s2.24,-5 5,-5 5,2.24 5,5 -2.24,5 -5,5zM12,9c-1.66,0 -3,1.34 -3,3s1.34,3 3,3 3,-1.34 3,-3 -1.34,-3 -3,-3z"/>
+</vector>
Index: app/src/main/res/drawable/edit_text_background.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/edit_text_background.xml b/app/src/main/res/drawable/edit_text_background.xml
new file mode 100644
--- /dev/null	(date 1743448375726)
+++ b/app/src/main/res/drawable/edit_text_background.xml	(date 1743448375726)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android">
+    <solid android:color="#FFFFFF"/> <!-- White background for the EditText -->
+    <corners android:radius="8dp"/> <!-- Rounded corners -->
+    <stroke android:color="#D6006C" android:width="2dp"/> <!-- Deep pink border -->
+</shape>
Index: app/src/main/res/drawable/ic_notification.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/ic_notification.xml b/app/src/main/res/drawable/ic_notification.xml
new file mode 100644
--- /dev/null	(date 1743536899226)
+++ b/app/src/main/res/drawable/ic_notification.xml	(date 1743536899226)
@@ -0,0 +1,24 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24"
+    android:tint="?attr/colorControlNormal">
+    <path
+        android:fillColor="@android:color/white"
+        android:pathData="M12,22c1.1,0 2,-0.9 2,-2h-4c0,1.1 0.9,2 2,2zm6,-6v-5c0,-3.07 -1.63,-5.64 -4.5,-6.32V4c0,-0.83 -0.67,-1.5 -1.5,-1.5s-1.5,0.67 -1.5,1.5v0.68C7.64,5.36 6,7.92 6,11v5l-2,2v1h16v-1l-2,-2z"/>
+    <!-- Change this: -->
+    <ImageView
+        android:layout_width="24dp"
+        android:layout_height="24dp"
+        android:src="@drawable/ic_sound"
+        app:tint="@color/purple_500"/>
+
+    <!-- To this: -->
+    <ImageView
+        android:layout_width="24dp"
+        android:layout_height="24dp"
+        android:src="@drawable/ic_volume_up"
+        app:tint="@color/purple_500"/>
+</vector>
\ No newline at end of file
Index: app/src/main/res/drawable/rounded_image_bg.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/rounded_image_bg.xml b/app/src/main/res/drawable/rounded_image_bg.xml
new file mode 100644
--- /dev/null	(date 1743930969817)
+++ b/app/src/main/res/drawable/rounded_image_bg.xml	(date 1743930969817)
@@ -0,0 +1,4 @@
+<shape xmlns:android="http://schemas.android.com/apk/res/android">
+    <solid android:color="@android:color/white"/>
+    <corners android:radius="50dp"/>
+</shape>
Index: app/src/main/res/drawable/ic_menu.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/ic_menu.xml b/app/src/main/res/drawable/ic_menu.xml
new file mode 100644
--- /dev/null	(date 1744890370310)
+++ b/app/src/main/res/drawable/ic_menu.xml	(date 1744890370310)
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24">
+    <path
+        android:fillColor="#FFFFFF"
+        android:pathData="M3,6h18v2H3V6zm0,5h18v2H3v-2zm0,5h18v2H3v-2z" />
+</vector>
Index: app/src/main/res/drawable/round_red_button.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/round_red_button.xml b/app/src/main/res/drawable/round_red_button.xml
new file mode 100644
--- /dev/null	(date 1743963505477)
+++ b/app/src/main/res/drawable/round_red_button.xml	(date 1743963505477)
@@ -0,0 +1,3 @@
+<shape xmlns:android="http://schemas.android.com/apk/res/android" android:shape="oval">
+    <solid android:color="@android:color/holo_red_dark"/>
+</shape>
Index: app/src/main/res/drawable/ic_tracking.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/ic_tracking.xml b/app/src/main/res/drawable/ic_tracking.xml
new file mode 100644
--- /dev/null	(date 1744775146909)
+++ b/app/src/main/res/drawable/ic_tracking.xml	(date 1744775146909)
@@ -0,0 +1,7 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp" android:height="24dp"
+    android:viewportWidth="24" android:viewportHeight="24">
+    <path
+        android:fillColor="#000000"
+        android:pathData="M12,2C6.48,2 2,6.48 2,12s4.48,10 10,10 10,-4.48 10,-10S17.52,2 12,2zm0,18c-4.41,0 -8,-3.59 -8,-8s3.59,-8 8,-8 8,3.59 8,8 -3.59,8 -8,8zm0,-14c-3.31,0 -6,2.69 -6,6s2.69,6 6,6 6,-2.69 6,-6 -2.69,-6 -6,-6zm0,10c-2.21,0 -4,-1.79 -4,-4s1.79,-4 4,-4 4,1.79 4,4 -1.79,4 -4,4z"/>
+</vector>
Index: app/src/main/res/drawable/rounded_toolbar_bg.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/rounded_toolbar_bg.xml b/app/src/main/res/drawable/rounded_toolbar_bg.xml
new file mode 100644
--- /dev/null	(date 1744959448633)
+++ b/app/src/main/res/drawable/rounded_toolbar_bg.xml	(date 1744959448633)
@@ -0,0 +1,18 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shape="rectangle">
+
+    <!-- Solid color -->
+    <gradient
+        android:startColor="#FF69B4"
+        android:endColor="#FFB6C1"
+        android:angle="90"/>
+
+    <!-- All 4 corners rounded in single tag -->
+    <corners
+        android:topLeftRadius="16dp"
+        android:topRightRadius="16dp"
+        android:bottomLeftRadius="16dp"
+        android:bottomRightRadius="16dp" />
+
+</shape>
\ No newline at end of file
Index: app/src/main/res/drawable/toolbar_rounded_background.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/toolbar_rounded_background.xml b/app/src/main/res/drawable/toolbar_rounded_background.xml
new file mode 100644
--- /dev/null	(date 1743930180936)
+++ b/app/src/main/res/drawable/toolbar_rounded_background.xml	(date 1743930180936)
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shape="rectangle">
+
+    <solid android:color="@color/purple_500" />
+
+    <corners android:bottomLeftRadius="16dp"
+        android:bottomRightRadius="16dp" />
+</shape>
Index: app/src/main/res/drawable/ic_delete.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/ic_delete.xml b/app/src/main/res/drawable/ic_delete.xml
new file mode 100644
--- /dev/null	(date 1743527638626)
+++ b/app/src/main/res/drawable/ic_delete.xml	(date 1743527638626)
@@ -0,0 +1,10 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24"
+    android:tint="?attr/colorControlNormal">
+    <path
+        android:fillColor="@android:color/white"
+        android:pathData="M6,19c0,1.1 0.9,2 2,2h8c1.1,0 2,-0.9 2,-2V7H6V19zM19,4h-3.5l-1,-1h-5l-1,1H5v2h14V4z"/>
+</vector>
\ No newline at end of file
Index: app/src/main/res/drawable/ic_location.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/ic_location.xml b/app/src/main/res/drawable/ic_location.xml
new file mode 100644
--- /dev/null	(date 1743516520720)
+++ b/app/src/main/res/drawable/ic_location.xml	(date 1743516520720)
@@ -0,0 +1,10 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24"
+    android:tint="?attr/colorControlNormal">
+    <path
+        android:fillColor="@android:color/white"
+        android:pathData="M12,2C8.13,2 5,5.13 5,9c0,5.25 7,13 7,13s7,-7.75 7,-13c0,-3.87 -3.13,-7 -7,-7zM12,11.5c-1.38,0 -2.5,-1.12 -2.5,-2.5s1.12,-2.5 2.5,-2.5 2.5,1.12 2.5,2.5 -1.12,2.5 -2.5,2.5z"/>
+</vector>
\ No newline at end of file
Index: app/src/main/res/drawable/ic_safety.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/ic_safety.xml b/app/src/main/res/drawable/ic_safety.xml
new file mode 100644
--- /dev/null	(date 1744775200497)
+++ b/app/src/main/res/drawable/ic_safety.xml	(date 1744775200497)
@@ -0,0 +1,7 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp" android:height="24dp"
+    android:viewportWidth="24" android:viewportHeight="24">
+    <path
+        android:fillColor="#000000"
+        android:pathData="M12,1L3,5v6c0,5.55 3.84,10.74 9,12 5.16,-1.26 9,-6.45 9,-12V5l-9,-4zM12,17c-2.21,0 -4,-1.79 -4,-4s1.79,-4 4,-4 4,1.79 4,4 -1.79,4 -4,4z"/>
+</vector>
Index: app/src/main/res/drawable/ic_volume_up.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/ic_volume_up.xml b/app/src/main/res/drawable/ic_volume_up.xml
new file mode 100644
--- /dev/null	(date 1743563002313)
+++ b/app/src/main/res/drawable/ic_volume_up.xml	(date 1743563002313)
@@ -0,0 +1,10 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24"
+    android:tint="?attr/colorControlNormal">
+    <path
+        android:fillColor="@android:color/white"
+        android:pathData="M3,9v6h4l5,5V4L7,9H3zm13.5,3c0-1.77-1.02-3.29-2.5-4.03v8.05c1.48-0.73 2.5-2.25 2.5-4.02zM14,3.23v2.06c2.89,0.86 5,3.54 5,6.71s-2.11,5.85-5,6.71v2.06c4.01-0.91 7-4.49 7-8.77s-2.99-7.86-7-8.77z"/>
+</vector>
\ No newline at end of file
Index: app/src/main/res/drawable/rounded_button.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/rounded_button.xml b/app/src/main/res/drawable/rounded_button.xml
new file mode 100644
--- /dev/null	(date 1743963531406)
+++ b/app/src/main/res/drawable/rounded_button.xml	(date 1743963531406)
@@ -0,0 +1,4 @@
+<shape xmlns:android="http://schemas.android.com/apk/res/android" android:shape="rectangle">
+    <solid android:color="#87CEFA"/>
+    <corners android:radius="20dp"/>
+</shape>
Index: app/src/main/res/drawable/bg_bottom_nav_curve.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/bg_bottom_nav_curve.xml b/app/src/main/res/drawable/bg_bottom_nav_curve.xml
new file mode 100644
--- /dev/null	(date 1743962882730)
+++ b/app/src/main/res/drawable/bg_bottom_nav_curve.xml	(date 1743962882730)
@@ -0,0 +1,4 @@
+<shape xmlns:android="http://schemas.android.com/apk/res/android" android:shape="rectangle">
+    <solid android:color="@android:color/white"/>
+    <corners android:topLeftRadius="24dp" android:topRightRadius="24dp"/>
+</shape>
Index: app/src/main/res/drawable/rounded_sos.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/rounded_sos.xml b/app/src/main/res/drawable/rounded_sos.xml
new file mode 100644
--- /dev/null	(date 1743529610582)
+++ b/app/src/main/res/drawable/rounded_sos.xml	(date 1743529610582)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shape="oval">
+    <solid android:color="@color/sos_red"/>
+    <size android:width="60dp" android:height="60dp"/>
+</shape>
\ No newline at end of file
Index: app/src/main/res/drawable/ic_contacts.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/ic_contacts.xml b/app/src/main/res/drawable/ic_contacts.xml
new file mode 100644
--- /dev/null	(date 1743948946895)
+++ b/app/src/main/res/drawable/ic_contacts.xml	(date 1743948946895)
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24">
+    <path
+        android:fillColor="#FF000000"
+        android:pathData="M20,0H4v2h16V0zM4,24h16v-2H4V24zM20,4H4C2.9,4 2,4.9 2,6v12c0,1.1 0.9,2 2,2h16c1.1,0 2,-0.9 2,-2V6C22,4.9 21.1,4 20,4zM12,6.75c1.24,0 2.25,1.01 2.25,2.25s-1.01,2.25 -2.25,2.25S9.75,10.24 9.75,9 10.76,6.75 12,6.75zM17,17H7v-1.5c0,-1.67 3.33,-2.5 5,-2.5s5,0.83 5,2.5V17z" />
+</vector>
\ No newline at end of file
Index: app/src/main/res/drawable/ic_home.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/ic_home.xml b/app/src/main/res/drawable/ic_home.xml
new file mode 100644
--- /dev/null	(date 1743948868985)
+++ b/app/src/main/res/drawable/ic_home.xml	(date 1743948868985)
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24">
+    <path
+        android:fillColor="#FF000000"
+        android:pathData="M10,20v-6h4v6h5v-8h3L12,3 2,12h3v8z" />
+</vector>
\ No newline at end of file
Index: app/src/main/res/drawable/ic_edit.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/ic_edit.xml b/app/src/main/res/drawable/ic_edit.xml
new file mode 100644
--- /dev/null	(date 1743516534613)
+++ b/app/src/main/res/drawable/ic_edit.xml	(date 1743516534613)
@@ -0,0 +1,10 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24"
+    android:tint="?attr/colorControlNormal">
+    <path
+        android:fillColor="@android:color/white"
+        android:pathData="M3,17.25V21h3.75L17.81,9.94l-3.75,-3.75L3,17.25zM20.71,7.04c0.39,-0.39 0.39,-1.02 0,-1.41l-2.34,-2.34c-0.39,-0.39 -1.02,-0.39 -1.41,0l-1.83,1.83 3.75,3.75 1.83,-1.83z"/>
+</vector>
\ No newline at end of file
Index: app/src/main/res/drawable/ic_phone.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/ic_phone.xml b/app/src/main/res/drawable/ic_phone.xml
new file mode 100644
--- /dev/null	(date 1743950911843)
+++ b/app/src/main/res/drawable/ic_phone.xml	(date 1743950911843)
@@ -0,0 +1,10 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24">
+
+    <path
+        android:fillColor="#757575"
+        android:pathData="M6.6,10.79c1.44,2.83 3.89,5.28 6.72,6.72l2.24,-2.24c0.27,-0.27 0.67,-0.36 1.02,-0.24 1.12,0.37 2.33,0.57 3.42,0.57 0.55,0 1,0.45 1,1v3.5c0,0.55 -0.45,1 -1,1C10.4,21 3,13.6 3,4.5c0,-0.55 0.45,-1 1,-1H7.5c0.55,0 1,0.45 1,1 0,1.09 0.2,2.3 0.57,3.42 0.11,0.35 0.03,0.74 -0.25,1.02L6.6,10.79z"/>
+</vector>
Index: app/src/main/res/drawable/icon_tint.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/icon_tint.xml b/app/src/main/res/drawable/icon_tint.xml
new file mode 100644
--- /dev/null	(date 1744996299423)
+++ b/app/src/main/res/drawable/icon_tint.xml	(date 1744996299423)
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layer-list xmlns:android="http://schemas.android.com/apk/res/android">
+    <item>
+        <shape android:shape="rectangle">
+            <gradient
+                android:startColor="#6200EE"
+                android:endColor="#FF4081"
+                android:angle="45"/>
+        </shape>
+    </item>
+</layer-list>
Index: app/src/main/res/drawable/bg_toolbar_gradient.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/bg_toolbar_gradient.xml b/app/src/main/res/drawable/bg_toolbar_gradient.xml
new file mode 100644
--- /dev/null	(date 1744890277902)
+++ b/app/src/main/res/drawable/bg_toolbar_gradient.xml	(date 1744890277902)
@@ -0,0 +1,7 @@
+<shape xmlns:android="http://schemas.android.com/apk/res/android" android:shape="rectangle">
+    <gradient
+        android:startColor="#FF69B4"
+        android:endColor="#FFB6C1"
+        android:angle="90"/>
+    <corners android:radius="24dp"/>
+</shape>
Index: app/src/main/res/drawable/ic_sos.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/ic_sos.xml b/app/src/main/res/drawable/ic_sos.xml
new file mode 100644
--- /dev/null	(date 1743563870349)
+++ b/app/src/main/res/drawable/ic_sos.xml	(date 1743563870349)
@@ -0,0 +1,10 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24"
+    android:tint="?attr/colorControlNormal">
+    <path
+        android:fillColor="@android:color/white"
+        android:pathData="M12,1L3,5v6c0,5.55 3.84,10.74 9,12c5.16-1.26 9-6.45 9-12V5L12,1zM12,11.99h7c-0.53,4.12-3.28,7.79-7,8.94V12H5V6.3l7-3.11V11.99z"/>
+</vector>
\ No newline at end of file
Index: app/src/main/res/drawable/ic_anonymous.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/ic_anonymous.xml b/app/src/main/res/drawable/ic_anonymous.xml
new file mode 100644
--- /dev/null	(date 1744775170260)
+++ b/app/src/main/res/drawable/ic_anonymous.xml	(date 1744775170260)
@@ -0,0 +1,7 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp" android:height="24dp"
+    android:viewportWidth="24" android:viewportHeight="24">
+    <path
+        android:fillColor="#000000"
+        android:pathData="M12,2C6.48,2 2,6.48 2,12c0,2.52 1.17,4.76 3,6.24V22l3.18,-2.12C9.49,20.3 10.71,20.59 12,20.59c5.52,0 10,-4.48 10,-10s-4.48,-8.59 -10,-8.59zM7,10c0,-1.66 1.34,-3 3,-3s3,1.34 3,3 -1.34,3 -3,3 -3,-1.34 -3,-3zm10,5.5c0,0.83 -3.33,1.5 -5,1.5s-5,-0.67 -5,-1.5v-1c0,-0.83 3.33,-1.5 5,-1.5s5,0.67 5,1.5v1z"/>
+</vector>
Index: app/src/main/java/com/pant/girly/EmergencyContactsAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/pant/girly/EmergencyContactsAdapter.kt b/app/src/main/java/com/pant/girly/EmergencyContactsAdapter.kt
new file mode 100644
--- /dev/null	(date 1743933001308)
+++ b/app/src/main/java/com/pant/girly/EmergencyContactsAdapter.kt	(date 1743933001308)
@@ -0,0 +1,42 @@
+package com.pant.girly
+
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import android.widget.ImageButton
+import android.widget.TextView
+import androidx.recyclerview.widget.RecyclerView
+
+class EmergencyContactsAdapter(
+    private val contactList: List<EmergencyContact>,
+    private val onDelete: (EmergencyContact) -> Unit
+) : RecyclerView.Adapter<EmergencyContactsAdapter.ContactViewHolder>() {
+
+    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ContactViewHolder {
+        val view = LayoutInflater.from(parent.context)
+            .inflate(R.layout.item_emergency_contact, parent, false)
+        return ContactViewHolder(view)
+    }
+
+    override fun onBindViewHolder(holder: ContactViewHolder, position: Int) {
+        val contact = contactList[position]
+        holder.bind(contact)
+    }
+
+    override fun getItemCount(): Int = contactList.size
+
+    inner class ContactViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView) {
+        private val tvName: TextView = itemView.findViewById(R.id.tvContactName)
+        private val tvPhone: TextView = itemView.findViewById(R.id.tvContactPhone)
+        private val btnDelete: ImageButton = itemView.findViewById(R.id.btnDeleteContact)
+
+        fun bind(contact: EmergencyContact) {
+            tvName.text = contact.name
+            tvPhone.text = contact.phone
+
+            btnDelete.setOnClickListener {
+                onDelete(contact)
+            }
+        }
+    }
+}
Index: app/src/main/java/com/pant/girly/SosTriggerActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/pant/girly/SosTriggerActivity.kt b/app/src/main/java/com/pant/girly/SosTriggerActivity.kt
new file mode 100644
--- /dev/null	(date 1745080470234)
+++ b/app/src/main/java/com/pant/girly/SosTriggerActivity.kt	(date 1745080470234)
@@ -0,0 +1,110 @@
+package com.pant.girly
+
+import android.Manifest
+import android.content.Intent
+import android.content.pm.PackageManager
+import android.location.Location
+import android.os.Bundle
+import android.widget.Toast
+import androidx.appcompat.app.AppCompatActivity
+import androidx.core.app.ActivityCompat
+import com.google.android.gms.location.LocationServices
+import com.google.firebase.auth.FirebaseAuth
+import com.google.firebase.database.FirebaseDatabase
+import com.pant.girly.LiveVideoActivity
+
+class SosTriggerActivity : AppCompatActivity() {
+
+    private val LOCATION_PERMISSION_CODE = 1001
+
+    override fun onCreate(savedInstanceState: Bundle?) {
+        super.onCreate(savedInstanceState)
+
+        // Request location permission
+        if (ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED) {
+            ActivityCompat.requestPermissions(this, arrayOf(Manifest.permission.ACCESS_FINE_LOCATION), LOCATION_PERMISSION_CODE)
+        } else {
+            triggerSOS()
+        }
+    }
+
+
+
+    private fun triggerSOS() {
+        val user = FirebaseAuth.getInstance().currentUser ?: return
+        val fusedLocationProvider = LocationServices.getFusedLocationProviderClient(this)
+
+        if (ActivityCompat.checkSelfPermission(
+                this,
+                Manifest.permission.ACCESS_FINE_LOCATION
+            ) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(
+                this,
+                Manifest.permission.ACCESS_COARSE_LOCATION
+            ) != PackageManager.PERMISSION_GRANTED
+        ) {
+            // TODO: Consider calling
+            //    ActivityCompat#requestPermissions
+            // here to request the missing permissions, and then overriding
+            //   public void onRequestPermissionsResult(int requestCode, String[] permissions,
+            //                                          int[] grantResults)
+            // to handle the case where the user grants the permission. See the documentation
+            // for ActivityCompat#requestPermissions for more details.
+            return
+        }
+        fusedLocationProvider.lastLocation.addOnSuccessListener { location: Location? ->
+            val latLng = if (location != null) "${location.latitude}, ${location.longitude}" else "Unknown"
+
+            val sosData = mapOf(
+                "timestamp" to System.currentTimeMillis(),
+                "location" to latLng,
+                "status" to "Triggered"
+            )
+
+            FirebaseDatabase.getInstance().reference
+                .child("sos_alerts")
+                .child(user.uid)
+                .push()
+                .setValue(sosData)
+
+            sendAlertToEmergencyContacts(latLng)
+
+            Toast.makeText(this, "SOS Alert Triggered", Toast.LENGTH_SHORT).show()
+
+            // Start Live Video Stream
+            val intent = Intent(this, LiveVideoActivity::class.java)
+            startActivity(intent)
+            finish()
+        }.addOnFailureListener {
+            Toast.makeText(this, "Failed to get location", Toast.LENGTH_SHORT).show()
+        }
+    }
+
+    private fun sendAlertToEmergencyContacts(location: String) {
+        val emergencyMessage = "⚠️ SOS Triggered! Location: $location. Please respond immediately!"
+
+        // Firebase path: users/{uid}/emergency_contacts
+        val user = FirebaseAuth.getInstance().currentUser ?: return
+        val ref = FirebaseDatabase.getInstance().reference
+            .child("users")
+            .child(user.uid)
+            .child("emergency_contacts")
+
+        ref.get().addOnSuccessListener { snapshot ->
+            for (child in snapshot.children) {
+                val number = child.child("number").getValue(String::class.java)
+                number?.let {
+                    SmsUtil.sendSMS(this, it, emergencyMessage)
+                }
+            }
+        }
+    }
+
+    override fun onRequestPermissionsResult(requestCode: Int, permissions: Array<String>, grantResults: IntArray) {
+        super.onRequestPermissionsResult(requestCode, permissions, grantResults)
+        if (requestCode == LOCATION_PERMISSION_CODE && grantResults.isNotEmpty() && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
+            triggerSOS()
+        } else {
+            Toast.makeText(this, "Permission Denied", Toast.LENGTH_SHORT).show()
+        }
+    }
+}
Index: app/src/main/java/com/pant/girly/RegisteredAddressActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/pant/girly/RegisteredAddressActivity.kt b/app/src/main/java/com/pant/girly/RegisteredAddressActivity.kt
new file mode 100644
--- /dev/null	(date 1744994633434)
+++ b/app/src/main/java/com/pant/girly/RegisteredAddressActivity.kt	(date 1744994633434)
@@ -0,0 +1,162 @@
+package com.pant.girly
+
+import android.Manifest
+import android.content.pm.PackageManager
+import android.location.Location
+import android.os.Bundle
+import android.util.Log
+import android.view.View
+import android.widget.Toast
+import androidx.appcompat.app.AppCompatActivity
+import androidx.core.app.ActivityCompat
+import com.google.android.gms.location.FusedLocationProviderClient
+import com.google.android.gms.location.LocationServices
+import com.google.android.gms.maps.CameraUpdateFactory
+import com.google.android.gms.maps.GoogleMap
+import com.google.android.gms.maps.OnMapReadyCallback
+import com.google.android.gms.maps.SupportMapFragment
+import com.google.android.gms.maps.model.LatLng
+import com.google.android.gms.maps.model.MarkerOptions
+import com.google.firebase.auth.FirebaseAuth
+import com.google.firebase.database.DataSnapshot
+import com.google.firebase.database.DatabaseError
+import com.google.firebase.database.FirebaseDatabase
+import com.google.firebase.database.ValueEventListener
+import com.pant.girly.databinding.ActivityRegisteredAddressBinding
+
+class RegisteredAddressActivity : AppCompatActivity(), OnMapReadyCallback {
+
+    private lateinit var binding: ActivityRegisteredAddressBinding
+    private lateinit var auth: FirebaseAuth
+    private lateinit var database: FirebaseDatabase
+    private lateinit var fusedLocationClient: FusedLocationProviderClient
+    private lateinit var googleMap: GoogleMap
+    private var currentLocation: Location? = null
+
+    override fun onCreate(savedInstanceState: Bundle?) {
+        super.onCreate(savedInstanceState)
+        binding = ActivityRegisteredAddressBinding.inflate(layoutInflater)
+        setContentView(binding.root)
+
+        // Initialize Firebase & Location Services
+        auth = FirebaseAuth.getInstance()
+        database = FirebaseDatabase.getInstance()
+        fusedLocationClient = LocationServices.getFusedLocationProviderClient(this)
+
+        // Setup Toolbar
+        setSupportActionBar(binding.toolbar)
+        supportActionBar?.setDisplayHomeAsUpEnabled(true)
+        supportActionBar?.title = "Registered Address"
+
+        // Initialize Map
+        val mapFragment = supportFragmentManager.findFragmentById(R.id.map) as SupportMapFragment
+        mapFragment.getMapAsync(this)
+
+        // Click listeners
+        binding.btnUseCurrentLocation.setOnClickListener { getCurrentLocation() }
+        binding.btnSaveAddress.setOnClickListener { saveAddress() }
+
+        // Load previously saved address
+        loadAddress()
+    }
+
+    override fun onMapReady(map: GoogleMap) {
+        googleMap = map
+        googleMap.uiSettings.isZoomControlsEnabled = true
+    }
+
+    private fun getCurrentLocation() {
+        if (ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED) {
+            ActivityCompat.requestPermissions(this, arrayOf(Manifest.permission.ACCESS_FINE_LOCATION), 100)
+            return
+        }
+
+        fusedLocationClient.lastLocation.addOnSuccessListener { location ->
+            if (location != null) {
+                currentLocation = location
+                val latLng = LatLng(location.latitude, location.longitude)
+
+                googleMap.clear() // Clear previous markers
+                googleMap.addMarker(MarkerOptions().position(latLng).title("Current Location"))
+                googleMap.moveCamera(CameraUpdateFactory.newLatLngZoom(latLng, 15f))
+
+                showToast("Location updated successfully!")
+            } else {
+                showToast("Failed to get location!")
+            }
+        }.addOnFailureListener {
+            showToast("Error fetching location: ${it.message}")
+        }
+    }
+
+    private fun loadAddress() {
+        val currentUser = auth.currentUser ?: return
+        database.reference.child("addresses").child(currentUser.uid).addListenerForSingleValueEvent(object : ValueEventListener {
+            override fun onDataChange(snapshot: DataSnapshot) {
+                if (snapshot.exists()) {
+                    binding.etAddressLine1.setText(snapshot.child("line1").getValue(String::class.java))
+                    binding.etAddressLine2.setText(snapshot.child("line2").getValue(String::class.java))
+                    binding.etCity.setText(snapshot.child("city").getValue(String::class.java))
+                    binding.etState.setText(snapshot.child("state").getValue(String::class.java))
+                    binding.etPostalCode.setText(snapshot.child("postalCode").getValue(String::class.java))
+                    binding.etCountry.setText(snapshot.child("country").getValue(String::class.java))
+
+                    val lat = snapshot.child("latitude").getValue(Double::class.java)
+                    val lng = snapshot.child("longitude").getValue(Double::class.java)
+
+                    if (lat != null && lng != null) {
+                        val latLng = LatLng(lat, lng)
+                        googleMap.clear()
+                        googleMap.addMarker(MarkerOptions().position(latLng).title("Saved Address"))
+                        googleMap.moveCamera(CameraUpdateFactory.newLatLngZoom(latLng, 15f))
+                    }
+                }
+            }
+
+            override fun onCancelled(error: DatabaseError) {
+                showToast("Failed to load address: ${error.message}")
+            }
+        })
+    }
+
+    private fun saveAddress() {
+        val currentUser = auth.currentUser ?: return
+        val address = hashMapOf(
+            "line1" to binding.etAddressLine1.text.toString(),
+            "line2" to binding.etAddressLine2.text.toString(),
+            "city" to binding.etCity.text.toString(),
+            "state" to binding.etState.text.toString(),
+            "postalCode" to binding.etPostalCode.text.toString(),
+            "country" to binding.etCountry.text.toString(),
+            "latitude" to currentLocation?.latitude,
+            "longitude" to currentLocation?.longitude
+        )
+
+        database.reference.child("addresses").child(currentUser.uid).setValue(address).addOnCompleteListener {
+            if (it.isSuccessful) {
+                showToast("Address saved successfully!")
+                finish()
+            } else {
+                showToast("Error saving address: ${it.exception?.message}")
+            }
+        }
+    }
+
+    override fun onRequestPermissionsResult(requestCode: Int, permissions: Array<out String>, grantResults: IntArray) {
+        super.onRequestPermissionsResult(requestCode, permissions, grantResults)
+        if (requestCode == 100 && grantResults.isNotEmpty() && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
+            getCurrentLocation()
+        } else {
+            showToast("Location permission denied.")
+        }
+    }
+
+    override fun onSupportNavigateUp(): Boolean {
+        onBackPressed()
+        return true
+    }
+
+    private fun showToast(message: String) {
+        Toast.makeText(this, message, Toast.LENGTH_SHORT).show()
+    }
+}
Index: app/src/main/java/com/pant/girly/EditProfileActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/pant/girly/EditProfileActivity.kt b/app/src/main/java/com/pant/girly/EditProfileActivity.kt
new file mode 100644
--- /dev/null	(date 1743534039747)
+++ b/app/src/main/java/com/pant/girly/EditProfileActivity.kt	(date 1743534039747)
@@ -0,0 +1,100 @@
+package com.pant.girly
+
+import android.net.Uri
+import android.os.Bundle
+import android.widget.Button
+import android.widget.EditText
+import android.widget.ImageView
+import android.widget.Toast
+import androidx.activity.result.contract.ActivityResultContracts
+import androidx.appcompat.app.AppCompatActivity
+import com.google.firebase.auth.FirebaseAuth
+import com.google.firebase.database.FirebaseDatabase
+import com.google.firebase.storage.FirebaseStorage
+
+class EditProfileActivity : AppCompatActivity() {
+
+    private lateinit var auth: FirebaseAuth
+    private lateinit var database: FirebaseDatabase
+    private lateinit var storage: FirebaseStorage
+    private var imageUri: Uri? = null
+
+    private val pickImage = registerForActivityResult(ActivityResultContracts.GetContent()) { uri ->
+        uri?.let {
+            imageUri = it
+            findViewById<ImageView>(R.id.ivProfile).setImageURI(it)
+        }
+    }
+
+    override fun onCreate(savedInstanceState: Bundle?) {
+        super.onCreate(savedInstanceState)
+        setContentView(R.layout.activity_edit_profile)
+
+        auth = FirebaseAuth.getInstance()
+        database = FirebaseDatabase.getInstance()
+        storage = FirebaseStorage.getInstance()
+
+        findViewById<ImageView>(R.id.ivProfile).setOnClickListener {
+            pickImage.launch("image/*")
+        }
+
+        findViewById<Button>(R.id.btnSave).setOnClickListener { updateProfile() }
+
+        loadCurrentData()
+    }
+
+    private fun loadCurrentData() {
+        val user = auth.currentUser ?: return
+
+        database.reference.child("users").child(user.uid)
+            .get().addOnSuccessListener { snapshot ->
+                val userData = snapshot.getValue(UserData::class.java)
+                userData?.let {
+                    findViewById<EditText>(R.id.etName).setText(it.name)
+                    findViewById<EditText>(R.id.etPhone).setText(it.phone)
+                    findViewById<EditText>(R.id.etAddress).setText(it.address)
+                }
+            }.addOnFailureListener {
+                Toast.makeText(this, "Failed to load profile", Toast.LENGTH_SHORT).show()
+            }
+    }
+
+    private fun updateProfile() {
+        val user = auth.currentUser ?: return
+
+        val userData = UserData(
+            name = findViewById<EditText>(R.id.etName).text.toString(),
+            phone = findViewById<EditText>(R.id.etPhone).text.toString(),
+            address = findViewById<EditText>(R.id.etAddress).text.toString()
+        )
+
+        database.reference.child("users").child(user.uid)
+            .setValue(userData)
+            .addOnSuccessListener {
+                imageUri?.let { uri ->
+                    uploadProfileImage(uri)
+                } ?: run {
+                    Toast.makeText(this, "Profile updated", Toast.LENGTH_SHORT).show()
+                    finish()
+                }
+            }
+            .addOnFailureListener {
+                Toast.makeText(this, "Update failed", Toast.LENGTH_SHORT).show()
+            }
+    }
+
+    private fun uploadProfileImage(uri: Uri) {
+        val user = auth.currentUser ?: return
+        val storageRef = storage.reference
+        val imageRef = storageRef.child("profile_images/${user.uid}.jpg")
+
+        imageRef.putFile(uri)
+            .addOnSuccessListener {
+                Toast.makeText(this, "Profile updated with image", Toast.LENGTH_SHORT).show()
+                finish()
+            }
+            .addOnFailureListener {
+                Toast.makeText(this, "Image upload failed", Toast.LENGTH_SHORT).show()
+            }
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/pant/girly/ShakeDetector.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/pant/girly/ShakeDetector.kt b/app/src/main/java/com/pant/girly/ShakeDetector.kt
new file mode 100644
--- /dev/null	(date 1745088925831)
+++ b/app/src/main/java/com/pant/girly/ShakeDetector.kt	(date 1745088925831)
@@ -0,0 +1,34 @@
+package com.pant.girly
+
+import android.hardware.Sensor
+import android.hardware.SensorEvent
+import android.hardware.SensorEventListener
+import android.hardware.SensorManager
+import kotlin.math.sqrt
+
+class ShakeDetector(private val onShake: () -> Unit) : SensorEventListener {
+    private var lastShakeTime: Long = 0
+    private val SHAKE_THRESHOLD_GRAVITY = 2.7f
+    private val SHAKE_SLOP_TIME_MS = 3000 // 3 seconds cooldown
+
+    override fun onSensorChanged(event: SensorEvent) {
+        val x = event.values[0]
+        val y = event.values[1]
+        val z = event.values[2]
+
+        val gX = x / SensorManager.GRAVITY_EARTH
+        val gY = y / SensorManager.GRAVITY_EARTH
+        val gZ = z / SensorManager.GRAVITY_EARTH
+
+        val gForce = sqrt(gX * gX + gY * gY + gZ * gZ)
+
+        if (gForce > SHAKE_THRESHOLD_GRAVITY) {
+            val now = System.currentTimeMillis()
+            if (lastShakeTime + SHAKE_SLOP_TIME_MS > now) return
+            lastShakeTime = now
+            onShake()
+        }
+    }
+
+    override fun onAccuracyChanged(sensor: Sensor?, accuracy: Int) {}
+}
Index: app/src/main/java/com/pant/girly/LiveTrackingActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/pant/girly/LiveTrackingActivity.kt b/app/src/main/java/com/pant/girly/LiveTrackingActivity.kt
new file mode 100644
--- /dev/null	(date 1744956909621)
+++ b/app/src/main/java/com/pant/girly/LiveTrackingActivity.kt	(date 1744956909621)
@@ -0,0 +1,178 @@
+package com.pant.girly
+
+import android.Manifest
+import android.content.pm.PackageManager
+import android.location.Location
+import android.os.Bundle
+import android.os.Looper
+import android.telephony.SmsManager
+import android.widget.Button
+import android.widget.Toast
+import androidx.appcompat.app.AppCompatActivity
+import androidx.core.app.ActivityCompat
+import com.google.android.gms.location.*
+import com.google.android.gms.maps.CameraUpdateFactory
+import com.google.android.gms.maps.GoogleMap
+import com.google.android.gms.maps.OnMapReadyCallback
+import com.google.android.gms.maps.SupportMapFragment
+import com.google.android.gms.maps.model.LatLng
+import com.google.android.gms.maps.model.MarkerOptions
+import com.google.firebase.auth.FirebaseAuth
+import com.google.firebase.database.FirebaseDatabase
+
+class LiveTrackingActivity : AppCompatActivity(), OnMapReadyCallback {
+
+    private lateinit var mMap: GoogleMap
+    private lateinit var fusedLocationClient: FusedLocationProviderClient
+    private lateinit var locationCallback: LocationCallback
+    private lateinit var locationRequest: LocationRequest
+
+    private var currentLocation: Location? = null
+
+    override fun onCreate(savedInstanceState: Bundle?) {
+        super.onCreate(savedInstanceState)
+        setContentView(R.layout.activity_live_tracking)
+
+        fusedLocationClient = LocationServices.getFusedLocationProviderClient(this)
+
+        val mapFragment = supportFragmentManager.findFragmentById(R.id.mapFragment) as SupportMapFragment
+        mapFragment.getMapAsync(this)
+
+        locationCallback = object : LocationCallback() {
+            override fun onLocationResult(locationResult: LocationResult) {
+                for (location in locationResult.locations) {
+                    currentLocation = location
+                    val latLng = LatLng(location.latitude, location.longitude)
+                    mMap.animateCamera(CameraUpdateFactory.newLatLngZoom(latLng, 16f))
+                    mMap.clear()
+                    mMap.addMarker(MarkerOptions().position(latLng).title("You're here"))
+                    updateLiveLocationToFirebase(latLng)
+                }
+            }
+        }
+
+        findViewById<Button>(R.id.btnStartTracking).setOnClickListener {
+            startLocationUpdates()
+        }
+
+        findViewById<Button>(R.id.btnStopTracking).setOnClickListener {
+            stopLocationUpdates()
+        }
+
+        findViewById<Button>(R.id.btnZoomIn).setOnClickListener {
+            mMap.animateCamera(CameraUpdateFactory.zoomIn())
+        }
+
+        findViewById<Button>(R.id.btnZoomOut).setOnClickListener {
+            mMap.animateCamera(CameraUpdateFactory.zoomOut())
+        }
+
+        findViewById<Button>(R.id.btnSendLocation).setOnClickListener {
+            Toast.makeText(this, "Sending location to emergency contacts...", Toast.LENGTH_SHORT).show()
+            sendLocationToEmergencyContacts()
+        }
+    }
+
+    override fun onMapReady(googleMap: GoogleMap) {
+        mMap = googleMap
+
+        if (ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED) {
+            ActivityCompat.requestPermissions(this, arrayOf(Manifest.permission.ACCESS_FINE_LOCATION), 101)
+            return
+        }
+
+        mMap.isMyLocationEnabled = true
+
+        fusedLocationClient.lastLocation.addOnSuccessListener { location: Location? ->
+            location?.let {
+                currentLocation = it
+                val userLatLng = LatLng(it.latitude, it.longitude)
+                mMap.animateCamera(CameraUpdateFactory.newLatLngZoom(userLatLng, 16f))
+                mMap.addMarker(MarkerOptions().position(userLatLng).title("You're here"))
+                updateLiveLocationToFirebase(userLatLng)
+            }
+        }
+    }
+
+    private fun startLocationUpdates() {
+        locationRequest = LocationRequest.Builder(Priority.PRIORITY_HIGH_ACCURACY, 5000L)
+            .setMinUpdateIntervalMillis(2000L)
+            .build()
+
+        if (ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED) {
+            Toast.makeText(this, "Location permission not granted", Toast.LENGTH_SHORT).show()
+            return
+        }
+
+        fusedLocationClient.requestLocationUpdates(locationRequest, locationCallback, Looper.getMainLooper())
+        Toast.makeText(this, "Live tracking started", Toast.LENGTH_SHORT).show()
+    }
+
+    private fun stopLocationUpdates() {
+        fusedLocationClient.removeLocationUpdates(locationCallback)
+        Toast.makeText(this, "Live tracking stopped", Toast.LENGTH_SHORT).show()
+    }
+
+    private fun sendLocationToEmergencyContacts() {
+        val user = FirebaseAuth.getInstance().currentUser ?: return
+        val databaseRef = FirebaseDatabase.getInstance().reference
+            .child("users")
+            .child(user.uid)
+            .child("emergency_contacts")
+
+        if (currentLocation != null) {
+            val message = "🚨 Emergency! I'm here: https://maps.google.com/?q=${currentLocation!!.latitude},${currentLocation!!.longitude}"
+
+            if (ActivityCompat.checkSelfPermission(this, Manifest.permission.SEND_SMS) != PackageManager.PERMISSION_GRANTED) {
+                ActivityCompat.requestPermissions(this, arrayOf(Manifest.permission.SEND_SMS), 102)
+                Toast.makeText(this, "SMS permission required", Toast.LENGTH_SHORT).show()
+                return
+            }
+
+            databaseRef.get().addOnSuccessListener { snapshot ->
+                for (contactSnapshot in snapshot.children) {
+                    val number = contactSnapshot.child("number").getValue(String::class.java)
+                    number?.let {
+                        try {
+                            val smsManager = SmsManager.getDefault()
+                            smsManager.sendTextMessage(it, null, message, null, null)
+                            Toast.makeText(this, "Alert sent to $it", Toast.LENGTH_SHORT).show()
+                        } catch (e: Exception) {
+                            Toast.makeText(this, "Failed to send SMS to $it", Toast.LENGTH_SHORT).show()
+                            e.printStackTrace()
+                        }
+                    }
+                }
+            }.addOnFailureListener {
+                Toast.makeText(this, "Failed to load emergency contacts", Toast.LENGTH_SHORT).show()
+            }
+        } else {
+            Toast.makeText(this, "Location not available", Toast.LENGTH_SHORT).show()
+        }
+    }
+
+    private fun updateLiveLocationToFirebase(latLng: LatLng) {
+        val user = FirebaseAuth.getInstance().currentUser ?: return
+        val locationMap = mapOf(
+            "latitude" to latLng.latitude,
+            "longitude" to latLng.longitude,
+            "timestamp" to System.currentTimeMillis()
+        )
+
+        FirebaseDatabase.getInstance().reference
+            .child("live_locations")
+            .child(user.uid)
+            .setValue(locationMap)
+    }
+
+    override fun onRequestPermissionsResult(requestCode: Int, permissions: Array<out String>, grantResults: IntArray) {
+        super.onRequestPermissionsResult(requestCode, permissions, grantResults)
+        if (requestCode == 102 && grantResults.isNotEmpty() && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
+            Toast.makeText(this, "SMS permission granted", Toast.LENGTH_SHORT).show()
+        } else if (requestCode == 101 && grantResults.isNotEmpty() && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
+            onMapReady(mMap)
+        } else {
+            Toast.makeText(this, "Permission denied", Toast.LENGTH_SHORT).show()
+        }
+    }
+}
Index: app/src/main/java/com/pant/girly/ForegroundShakeService.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/pant/girly/ForegroundShakeService.kt b/app/src/main/java/com/pant/girly/ForegroundShakeService.kt
new file mode 100644
--- /dev/null	(date 1745347697076)
+++ b/app/src/main/java/com/pant/girly/ForegroundShakeService.kt	(date 1745347697076)
@@ -0,0 +1,114 @@
+package com.pant.girly
+
+import android.app.*
+import android.content.Context
+import android.content.Intent
+import android.content.pm.PackageManager
+import android.content.pm.ServiceInfo
+import android.hardware.Sensor
+import android.hardware.SensorEvent
+import android.hardware.SensorEventListener
+import android.hardware.SensorManager
+import android.os.Build
+import android.os.IBinder
+import android.os.PowerManager
+import androidx.core.app.NotificationCompat
+import androidx.core.content.ContextCompat
+
+class ForegroundShakeService : Service(), SensorEventListener {
+
+    private lateinit var sensorManager: SensorManager
+    private var accelerometer: Sensor? = null
+    private var shakeTimestamp: Long = 0
+    private var shakeCount = 0
+    private lateinit var wakeLock: PowerManager.WakeLock
+
+    override fun onCreate() {
+        super.onCreate()
+
+        // WakeLock to keep CPU running
+        val powerManager = getSystemService(Context.POWER_SERVICE) as PowerManager
+        wakeLock = powerManager.newWakeLock(
+            PowerManager.PARTIAL_WAKE_LOCK,
+            "Girly::ShakeWakeLock"
+        ).apply {
+            acquire(10 * 60 * 1000L) // 10 mins
+        }
+
+        // Initialize sensor
+        sensorManager = getSystemService(Context.SENSOR_SERVICE) as SensorManager
+        accelerometer = sensorManager.getDefaultSensor(Sensor.TYPE_ACCELEROMETER)
+        accelerometer?.let {
+            sensorManager.registerListener(this, it, SensorManager.SENSOR_DELAY_NORMAL)
+        }
+
+        startForegroundServiceWithNotification()
+    }
+
+    private fun startForegroundServiceWithNotification() {
+        // Create notification channel (required for Android 8.0+)
+        val channelId = "shake_sos_channel"
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
+            val channel = NotificationChannel(
+                channelId,
+                "Shake Detection",
+                NotificationManager.IMPORTANCE_LOW
+            ).apply {
+                description = "Alerts when shake gesture detected"
+            }
+            (getSystemService(NOTIFICATION_SERVICE) as NotificationManager)
+                .createNotificationChannel(channel)
+        }
+
+        // PendingIntent to open app
+        val mainIntent = Intent(this, MainActivity::class.java).apply {
+            flags = Intent.FLAG_ACTIVITY_SINGLE_TOP
+        }
+        val pendingIntent = PendingIntent.getActivity(
+            this,
+            0,
+            mainIntent,
+            PendingIntent.FLAG_IMMUTABLE or PendingIntent.FLAG_UPDATE_CURRENT
+        )
+
+        // Build notification
+        val notification = NotificationCompat.Builder(this, channelId)
+            .setContentTitle("Safety Shake Detection")
+            .setContentText("Monitoring for emergency shakes")
+            .setSmallIcon(R.drawable.ic_sos) // Use your own icon
+            .setContentIntent(pendingIntent)
+            .setPriority(NotificationCompat.PRIORITY_LOW)
+            .setOngoing(true)
+            .build()
+
+        // Start foreground service
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.UPSIDE_DOWN_CAKE) {
+            startForeground(1, notification, ServiceInfo.FOREGROUND_SERVICE_TYPE_SPECIAL_USE)
+        } else {
+            startForeground(1, notification)
+        }
+    }
+
+    override fun onStartCommand(intent: Intent?, flags: Int, startId: Int): Int {
+        if (intent?.action == "STOP_SHAKE_SERVICE") {
+            stopSelf()
+        }
+        return START_STICKY
+    }
+
+    // ... [Rest of your existing sensor and shake detection code] ...
+
+    override fun onDestroy() {
+        sensorManager.unregisterListener(this)
+        if (::wakeLock.isInitialized && wakeLock.isHeld) {
+            wakeLock.release()
+        }
+        super.onDestroy()
+    }
+
+    override fun onBind(intent: Intent?): IBinder? = null
+    override fun onAccuracyChanged(sensor: Sensor?, accuracy: Int) {}
+    override fun onSensorChanged(event: SensorEvent?) {
+        /* Your existing shake detection logic */
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/pant/girly/SOSAlertsActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/pant/girly/SOSAlertsActivity.kt b/app/src/main/java/com/pant/girly/SOSAlertsActivity.kt
new file mode 100644
--- /dev/null	(date 1743525898458)
+++ b/app/src/main/java/com/pant/girly/SOSAlertsActivity.kt	(date 1743525898458)
@@ -0,0 +1,56 @@
+package com.pant.girly
+
+import android.annotation.SuppressLint
+import android.os.Bundle
+import androidx.appcompat.app.AppCompatActivity
+import androidx.recyclerview.widget.LinearLayoutManager
+import androidx.recyclerview.widget.RecyclerView
+import com.google.firebase.auth.FirebaseAuth
+import com.google.firebase.database.*
+
+class SOSAlertsActivity : AppCompatActivity() {
+
+    private lateinit var recyclerView: RecyclerView
+    private lateinit var adapter: SOSAlertsAdapter
+    private val alertList = mutableListOf<SOSAlert>()
+
+    @SuppressLint("MissingInflatedId")
+    override fun onCreate(savedInstanceState: Bundle?) {
+        super.onCreate(savedInstanceState)
+        setContentView(R.layout.activity_sos_alerts)
+
+        recyclerView = findViewById(R.id.rvSOSAlerts)
+        recyclerView.layoutManager = LinearLayoutManager(this)
+        adapter = SOSAlertsAdapter(alertList)
+        recyclerView.adapter = adapter
+
+        loadAlerts()
+    }
+
+    private fun loadAlerts() {
+        val user = FirebaseAuth.getInstance().currentUser ?: return
+        FirebaseDatabase.getInstance().reference
+            .child("sos_alerts")
+            .child(user.uid)
+            .addValueEventListener(object : ValueEventListener {
+                override fun onDataChange(snapshot: DataSnapshot) {
+                    alertList.clear()
+                    for (alertSnapshot in snapshot.children) {
+                        val alert = alertSnapshot.getValue(SOSAlert::class.java)
+                        alert?.let { alertList.add(it) }
+                    }
+                    adapter.notifyDataSetChanged()
+                }
+
+                override fun onCancelled(error: DatabaseError) {
+                    // Handle error
+                }
+            })
+    }
+}
+
+data class SOSAlert(
+    val timestamp: Long = 0,
+    val location: String = "",
+    val status: String = ""
+)
\ No newline at end of file
Index: app/src/main/java/com/pant/girly/ResetPasswordActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/pant/girly/ResetPasswordActivity.kt b/app/src/main/java/com/pant/girly/ResetPasswordActivity.kt
new file mode 100644
--- /dev/null	(date 1743526065772)
+++ b/app/src/main/java/com/pant/girly/ResetPasswordActivity.kt	(date 1743526065772)
@@ -0,0 +1,41 @@
+package com.pant.girly
+
+import android.annotation.SuppressLint
+import android.os.Bundle
+import android.widget.Button
+import android.widget.Toast
+import androidx.appcompat.app.AppCompatActivity
+import com.google.firebase.auth.FirebaseAuth
+import com.google.firebase.auth.ktx.auth
+import com.google.firebase.ktx.Firebase
+
+class ResetPasswordActivity : AppCompatActivity() {
+
+    private lateinit var auth: FirebaseAuth
+
+    @SuppressLint("MissingInflatedId")
+    override fun onCreate(savedInstanceState: Bundle?) {
+        super.onCreate(savedInstanceState)
+        setContentView(R.layout.activity_reset_password)
+
+        auth = Firebase.auth
+
+        findViewById<Button>(R.id.btnResetPassword).setOnClickListener {
+            sendResetEmail()
+        }
+    }
+
+    private fun sendResetEmail() {
+        val email = auth.currentUser?.email ?: return
+
+        auth.sendPasswordResetEmail(email)
+            .addOnCompleteListener { task ->
+                if (task.isSuccessful) {
+                    Toast.makeText(this, "Reset email sent to $email", Toast.LENGTH_SHORT).show()
+                    finish()
+                } else {
+                    Toast.makeText(this, "Failed to send reset email", Toast.LENGTH_SHORT).show()
+                }
+            }
+    }
+}
\ No newline at end of file
Index: app/src/main/res/values-night/colors.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values-night/colors.xml b/app/src/main/res/values-night/colors.xml
new file mode 100644
--- /dev/null	(date 1743601842981)
+++ b/app/src/main/res/values-night/colors.xml	(date 1743601842981)
@@ -0,0 +1,2 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources></resources>
\ No newline at end of file
Index: app/src/main/java/com/pant/girly/UserInfoActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/pant/girly/UserInfoActivity.kt b/app/src/main/java/com/pant/girly/UserInfoActivity.kt
new file mode 100644
--- /dev/null	(date 1743528478356)
+++ b/app/src/main/java/com/pant/girly/UserInfoActivity.kt	(date 1743528478356)
@@ -0,0 +1,63 @@
+package com.pant.girly
+
+import android.os.Bundle
+import android.widget.Button
+import android.widget.EditText
+import android.widget.Toast
+import androidx.appcompat.app.AppCompatActivity
+import com.google.firebase.auth.FirebaseAuth
+import com.google.firebase.database.FirebaseDatabase
+
+class UserInfoActivity : AppCompatActivity() {
+
+    private lateinit var auth: FirebaseAuth
+    private lateinit var database: FirebaseDatabase
+
+    override fun onCreate(savedInstanceState: Bundle?) {
+        super.onCreate(savedInstanceState)
+        setContentView(R.layout.activity_user_info)
+
+        auth = FirebaseAuth.getInstance()
+        database = FirebaseDatabase.getInstance()
+
+        findViewById<Button>(R.id.btnSave).setOnClickListener { saveUserData() }
+
+        loadUserData()
+    }
+
+    private fun loadUserData() {
+        val user = auth.currentUser ?: return
+
+        database.reference.child("users").child(user.uid)
+            .get().addOnSuccessListener { snapshot ->
+                val userData = snapshot.getValue(UserData::class.java)
+                userData?.let {
+                    findViewById<EditText>(R.id.etName).setText(it.name)
+                    findViewById<EditText>(R.id.etPhone).setText(it.phone)
+                    findViewById<EditText>(R.id.etAddress).setText(it.address)
+                }
+            }.addOnFailureListener {
+                Toast.makeText(this, "Failed to load data", Toast.LENGTH_SHORT).show()
+            }
+    }
+
+    private fun saveUserData() {
+        val user = auth.currentUser ?: return
+
+        val userData = UserData(
+            name = findViewById<EditText>(R.id.etName).text.toString(),
+            phone = findViewById<EditText>(R.id.etPhone).text.toString(),
+            address = findViewById<EditText>(R.id.etAddress).text.toString()
+        )
+
+        database.reference.child("users").child(user.uid)
+            .setValue(userData)
+            .addOnSuccessListener {
+                Toast.makeText(this, "Profile updated", Toast.LENGTH_SHORT).show()
+                finish()
+            }
+            .addOnFailureListener {
+                Toast.makeText(this, "Update failed", Toast.LENGTH_SHORT).show()
+            }
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/pant/girly/SmsUtil.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/pant/girly/SmsUtil.kt b/app/src/main/java/com/pant/girly/SmsUtil.kt
new file mode 100644
--- /dev/null	(date 1744391848967)
+++ b/app/src/main/java/com/pant/girly/SmsUtil.kt	(date 1744391848967)
@@ -0,0 +1,25 @@
+package com.pant.girly
+
+import android.content.Context
+import android.telephony.SmsManager
+import android.widget.Toast
+import androidx.core.app.ActivityCompat
+import android.Manifest
+import android.content.pm.PackageManager
+
+object SmsUtil {
+    fun sendSMS(context: Context, phoneNumber: String, message: String) {
+        if (ActivityCompat.checkSelfPermission(context, Manifest.permission.SEND_SMS) != PackageManager.PERMISSION_GRANTED) {
+            Toast.makeText(context, "SMS permission not granted", Toast.LENGTH_SHORT).show()
+            return
+        }
+
+        try {
+            val smsManager = SmsManager.getDefault()
+            smsManager.sendTextMessage(phoneNumber, null, message, null, null)
+            Toast.makeText(context, "SMS sent to $phoneNumber", Toast.LENGTH_SHORT).show()
+        } catch (e: Exception) {
+            Toast.makeText(context, "Failed to send SMS: ${e.message}", Toast.LENGTH_SHORT).show()
+        }
+    }
+}
Index: app/src/main/java/com/pant/girly/WatchActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/pant/girly/WatchActivity.kt b/app/src/main/java/com/pant/girly/WatchActivity.kt
new file mode 100644
--- /dev/null	(date 1744480942215)
+++ b/app/src/main/java/com/pant/girly/WatchActivity.kt	(date 1744480942215)
@@ -0,0 +1,247 @@
+package com.pant.girly
+
+import android.Manifest
+import android.annotation.SuppressLint
+import android.bluetooth.BluetoothAdapter
+import android.bluetooth.BluetoothManager
+import android.bluetooth.le.BluetoothLeScanner
+import android.bluetooth.le.ScanCallback
+import android.bluetooth.le.ScanResult
+import android.content.BroadcastReceiver
+import android.content.Context
+import android.content.Intent
+import android.content.IntentFilter
+import android.content.pm.PackageManager
+import android.os.BatteryManager
+import android.os.Build
+import android.os.Bundle
+import android.os.Handler
+import android.os.Looper
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import android.widget.Button
+import android.widget.EditText
+import android.widget.TextView
+import android.widget.Toast
+import androidx.appcompat.app.AppCompatActivity
+import androidx.core.app.ActivityCompat
+import androidx.core.content.ContextCompat
+import androidx.recyclerview.widget.LinearLayoutManager
+import androidx.recyclerview.widget.RecyclerView
+import com.google.firebase.auth.FirebaseAuth
+import com.google.firebase.database.FirebaseDatabase
+import java.util.*
+
+data class BluetoothDeviceInfo(val name: String?, val address: String)
+
+class WatchActivity : AppCompatActivity() {
+
+    private lateinit var heartRateTextView: TextView
+    private val handler = Handler(Looper.getMainLooper())
+    private var isMonitoring = false
+    private lateinit var addWatchButton: Button
+    private lateinit var watchIdEditText: EditText
+    private lateinit var scanButton: Button
+    private lateinit var devicesRecyclerView: RecyclerView
+    private lateinit var devicesAdapter: BluetoothDeviceAdapter // Changed to custom adapter
+    private val scannedDevices = mutableListOf<BluetoothDeviceInfo>() // Changed to data class list
+    private var bluetoothAdapter: BluetoothAdapter? = null
+    private var bluetoothLeScanner: BluetoothLeScanner? = null
+    private var isWatchConnected = false
+    private lateinit var auth: FirebaseAuth
+    private lateinit var database: FirebaseDatabase
+    private val LOCATION_PERMISSION_REQUEST_CODE = 123
+    private val scanCallback = object : ScanCallback() {
+        @SuppressLint("MissingPermission")
+        override fun onScanResult(callbackType: Int, result: ScanResult?) {
+            result?.device?.let { device ->
+                val deviceInfo = BluetoothDeviceInfo(device.name, device.address)
+                if (!scannedDevices.any { it.address == deviceInfo.address }) {
+                    scannedDevices.add(deviceInfo)
+                    devicesAdapter.notifyDataSetChanged()
+                }
+            }
+        }
+    }
+
+    // Custom RecyclerView Adapter (Moved inside WatchActivity)
+    class BluetoothDeviceAdapter(private val deviceList: List<BluetoothDeviceInfo>, private val itemClickListener: (BluetoothDeviceInfo) -> Unit) :
+        RecyclerView.Adapter<BluetoothDeviceAdapter.ViewHolder>() {
+
+        class ViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView) {
+            val nameTextView: TextView = itemView.findViewById(android.R.id.text1)
+            val addressTextView: TextView = itemView.findViewById(android.R.id.text2)
+
+            fun bind(deviceInfo: BluetoothDeviceInfo, clickListener: (BluetoothDeviceInfo) -> Unit) {
+                nameTextView.text = deviceInfo.name ?: "Unknown Device"
+                addressTextView.text = deviceInfo.address
+                itemView.setOnClickListener { clickListener(deviceInfo) }
+            }
+        }
+
+        override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ViewHolder {
+            val itemView = LayoutInflater.from(parent.context)
+                .inflate(android.R.layout.simple_list_item_2, parent, false)
+            return ViewHolder(itemView)
+        }
+
+        override fun onBindViewHolder(holder: ViewHolder, position: Int) {
+            val currentDevice = deviceList[position]
+            holder.bind(currentDevice, itemClickListener)
+        }
+
+        override fun getItemCount() = deviceList.size
+    }
+
+    @SuppressLint("MissingInflatedId")
+    override fun onCreate(savedInstanceState: Bundle?) {
+        super.onCreate(savedInstanceState)
+        setContentView(R.layout.activity_watch)
+
+        heartRateTextView = findViewById(R.id.heartRateTextView)
+        addWatchButton = findViewById(R.id.addWatchButton)
+        watchIdEditText = findViewById(R.id.watchIdEditText)
+        scanButton = findViewById(R.id.scanButton)
+        devicesRecyclerView = findViewById(R.id.devicesRecyclerView)
+        devicesRecyclerView.layoutManager = LinearLayoutManager(this)
+        devicesAdapter = BluetoothDeviceAdapter(scannedDevices) { deviceInfo ->
+            Toast.makeText(this, "Clicked: ${deviceInfo.name} - ${deviceInfo.address}", Toast.LENGTH_SHORT).show()
+            // Implement pairing logic here
+        }
+        devicesRecyclerView.adapter = devicesAdapter // Set the custom adapter
+
+        auth = FirebaseAuth.getInstance()
+        database = FirebaseDatabase.getInstance()
+
+        val bluetoothManager = getSystemService(Context.BLUETOOTH_SERVICE) as BluetoothManager
+        bluetoothAdapter = bluetoothManager.adapter
+        bluetoothLeScanner = bluetoothAdapter?.bluetoothLeScanner
+
+        startHeartRateSimulation()
+        registerChargerDisconnectReceiver()
+
+        addWatchButton.setOnClickListener {
+            val watchId = watchIdEditText.text.toString().trim()
+            if (watchId.isNotEmpty()) {
+                val userId = auth.currentUser?.uid
+                if (userId != null) {
+                    database.getReference("Users").child(userId).child("watchId").setValue(watchId)
+                        .addOnSuccessListener {
+                            Toast.makeText(this, "Watch ID added successfully!", Toast.LENGTH_SHORT).show()
+                        }
+                        .addOnFailureListener {
+                            Toast.makeText(this, "Failed to add Watch ID.", Toast.LENGTH_SHORT).show()
+                        }
+                } else {
+                    Toast.makeText(this, "User not logged in.", Toast.LENGTH_SHORT).show()
+                }
+            } else {
+                Toast.makeText(this, "Please enter Watch ID.", Toast.LENGTH_SHORT).show()
+            }
+        }
+
+        scanButton.setOnClickListener {
+            if (checkBluetoothPermissions()) {
+                startBluetoothScan()
+            } else {
+                requestBluetoothPermissions()
+            }
+        }
+    }
+
+    private fun checkBluetoothPermissions(): Boolean {
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.S) {
+            return ContextCompat.checkSelfPermission(this, Manifest.permission.BLUETOOTH_SCAN) == PackageManager.PERMISSION_GRANTED &&
+                    ContextCompat.checkSelfPermission(this, Manifest.permission.BLUETOOTH_CONNECT) == PackageManager.PERMISSION_GRANTED &&
+                    ContextCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) == PackageManager.PERMISSION_GRANTED
+        } else {
+            return ContextCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) == PackageManager.PERMISSION_GRANTED
+        }
+    }
+
+    private fun requestBluetoothPermissions(): Unit {
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.S) {
+            ActivityCompat.requestPermissions(this,
+                arrayOf(Manifest.permission.BLUETOOTH_SCAN, Manifest.permission.BLUETOOTH_CONNECT, Manifest.permission.ACCESS_FINE_LOCATION),
+                LOCATION_PERMISSION_REQUEST_CODE)
+        } else {
+            ActivityCompat.requestPermissions(this,
+                arrayOf(Manifest.permission.ACCESS_FINE_LOCATION),
+                LOCATION_PERMISSION_REQUEST_CODE)
+        }
+    }
+
+    @SuppressLint("MissingPermission")
+    private fun startBluetoothScan(): Unit {
+        scannedDevices.clear()
+        devicesAdapter.notifyDataSetChanged()
+        bluetoothLeScanner?.startScan(scanCallback)
+        Toast.makeText(this, "Scanning for devices...", Toast.LENGTH_SHORT).show()
+        Handler(Looper.getMainLooper()).postDelayed({
+            bluetoothLeScanner?.stopScan(scanCallback)
+            Toast.makeText(this, "Scan finished.", Toast.LENGTH_SHORT).show()
+        }, 10000) // Scan for 10 seconds
+    }
+
+    override fun onRequestPermissionsResult(requestCode: Int, permissions: Array<String>, grantResults: IntArray): Unit {
+        super.onRequestPermissionsResult(requestCode, permissions, grantResults)
+        if (requestCode == LOCATION_PERMISSION_REQUEST_CODE) {
+            if (grantResults.isNotEmpty() && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
+                startBluetoothScan()
+            } else {
+                Toast.makeText(this, "Location permission is required for Bluetooth scanning.", Toast.LENGTH_SHORT).show()
+            }
+        }
+    }
+
+    private fun startHeartRateSimulation(): Unit {
+        isMonitoring = true
+        handler.postDelayed(object : Runnable {
+            override fun run() {
+                if (!isMonitoring) return
+
+                if (isWatchConnected) {
+                    val heartRate = Random().nextInt(70) + 40
+                    heartRateTextView.text = "Heart Rate: $heartRate bpm"
+
+                    if (heartRate > 120 || heartRate < 50) {
+                        Toast.makeText(
+                            this@WatchActivity,
+                            "Abnormal Heart Rate Detected!",
+                            Toast.LENGTH_SHORT
+                        ).show()
+                        triggerSosFromWatch()
+                    }
+                } else {
+                    heartRateTextView.text = "Connect Watch"
+                }
+
+                handler.postDelayed(this, 5000)
+            }
+        }, 1000)
+    }
+
+    private fun triggerSosFromWatch(): Unit {
+        val intent = Intent(this, SosTriggerActivity::class.java)
+        intent.flags = Intent.FLAG_ACTIVITY_NEW_TASK or Intent.FLAG_ACTIVITY_CLEAR_TASK
+        startActivity(intent)
+    }
+
+    private fun registerChargerDisconnectReceiver(): Unit {
+        val filter = IntentFilter(Intent.ACTION_POWER_DISCONNECTED)
+        registerReceiver(object : BroadcastReceiver() {
+            override fun onReceive(context: Context?, intent: Intent?) {
+                Toast.makeText(context, "Charger Disconnected!", Toast.LENGTH_SHORT).show()
+                triggerSosFromWatch()
+            }
+        }, filter)
+    }
+
+    @SuppressLint("MissingPermission")
+    override fun onDestroy(): Unit {
+        super.onDestroy()
+        bluetoothLeScanner?.stopScan(scanCallback)
+        isMonitoring = false
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/pant/girly/AppController.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/pant/girly/AppController.kt b/app/src/main/java/com/pant/girly/AppController.kt
new file mode 100644
--- /dev/null	(date 1743531076538)
+++ b/app/src/main/java/com/pant/girly/AppController.kt	(date 1743531076538)
@@ -0,0 +1,13 @@
+package com.pant.girly
+
+import android.app.Application
+import com.google.firebase.FirebaseApp
+
+class AppController : Application() {
+    override fun onCreate() {
+        super.onCreate()
+        // Initialize Firebase
+        FirebaseApp.initializeApp(this)
+        // Other application-wide initializations
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/pant/girly/BootReceiver.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/pant/girly/BootReceiver.kt b/app/src/main/java/com/pant/girly/BootReceiver.kt
new file mode 100644
--- /dev/null	(date 1745089430535)
+++ b/app/src/main/java/com/pant/girly/BootReceiver.kt	(date 1745089430535)
@@ -0,0 +1,20 @@
+package com.pant.girly
+
+import android.content.BroadcastReceiver
+import android.content.Context
+import android.content.Intent
+import android.os.Build
+
+class BootReceiver : BroadcastReceiver() {
+    override fun onReceive(context: Context, intent: Intent) {
+        if (intent.action == Intent.ACTION_BOOT_COMPLETED) {
+            val serviceIntent = Intent(context, ForegroundShakeService::class.java)
+            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
+                context.startForegroundService(serviceIntent)
+            } else {
+                context.startService(serviceIntent)
+            }
+        }
+    }
+
+}
\ No newline at end of file
Index: app/src/main/java/com/pant/girly/EmergencyContactsActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/pant/girly/EmergencyContactsActivity.kt b/app/src/main/java/com/pant/girly/EmergencyContactsActivity.kt
new file mode 100644
--- /dev/null	(date 1745353769348)
+++ b/app/src/main/java/com/pant/girly/EmergencyContactsActivity.kt	(date 1745353769348)
@@ -0,0 +1,123 @@
+package com.pant.girly
+
+import android.os.Bundle
+import android.widget.Button
+import android.widget.EditText
+import android.widget.Toast
+import androidx.appcompat.app.AppCompatActivity
+import androidx.recyclerview.widget.LinearLayoutManager
+import androidx.recyclerview.widget.RecyclerView
+import com.google.firebase.auth.FirebaseAuth
+import com.google.firebase.database.*
+
+class EmergencyContactsActivity : AppCompatActivity() {
+
+    private lateinit var recyclerView: RecyclerView
+    private lateinit var adapter: EmergencyContactsAdapter
+    private val contactList = mutableListOf<EmergencyContact>()
+
+    override fun onCreate(savedInstanceState: Bundle?) {
+        super.onCreate(savedInstanceState)
+        setContentView(R.layout.activity_emergency_contacts)
+
+        recyclerView = findViewById(R.id.rvEmergencyContacts)
+        recyclerView.layoutManager = LinearLayoutManager(this)
+
+        adapter = EmergencyContactsAdapter(contactList, onDelete = { contact ->
+            deleteContact(contact)
+        })
+
+        recyclerView.adapter = adapter
+
+        findViewById<Button>(R.id.btnAddContact).setOnClickListener {
+            addContact()
+        }
+
+        loadContacts()
+    }
+
+    private fun loadContacts() {
+        val user = FirebaseAuth.getInstance().currentUser ?: return
+        FirebaseDatabase.getInstance().reference
+            .child("emergency_contacts")
+            .child(user.uid)
+            .addValueEventListener(object : ValueEventListener {
+                override fun onDataChange(snapshot: DataSnapshot) {
+                    contactList.clear()
+                    for (contactSnapshot in snapshot.children) {
+                        val contact = contactSnapshot.getValue(EmergencyContact::class.java)
+                        contact?.let {
+                            it.id = contactSnapshot.key.toString()
+                            contactList.add(it)
+                        }
+                    }
+                    adapter.notifyDataSetChanged()
+                }
+
+                override fun onCancelled(error: DatabaseError) {
+                    Toast.makeText(this@EmergencyContactsActivity, "Failed to load contacts", Toast.LENGTH_SHORT).show()
+                }
+            })
+    }
+
+    private fun addContact() {
+        val name = findViewById<EditText>(R.id.etContactName).text.toString()
+        val phone = findViewById<EditText>(R.id.etContactPhone).text.toString()
+
+        if (name.isBlank() || phone.isBlank()) {
+            Toast.makeText(this, "Please enter name and phone", Toast.LENGTH_SHORT).show()
+            return
+        }
+
+        val user = FirebaseAuth.getInstance().currentUser
+        if (user == null) {
+            Toast.makeText(this, "User not logged in", Toast.LENGTH_SHORT).show()
+            return
+        }
+
+        val contactRef = FirebaseDatabase.getInstance()
+            .getReference("emergency_contacts")
+            .child(user.uid)
+            .push()
+
+        val contact = EmergencyContact(
+            name = name,
+            phone = phone,
+            id = contactRef.key ?: ""
+        )
+
+        contactRef.setValue(contact)
+            .addOnSuccessListener {
+                Toast.makeText(this, "Contact added successfully", Toast.LENGTH_SHORT).show()
+                findViewById<EditText>(R.id.etContactName).text.clear()
+                findViewById<EditText>(R.id.etContactPhone).text.clear()
+            }
+            .addOnFailureListener {
+                Toast.makeText(this, "Failed to add contact", Toast.LENGTH_SHORT).show()
+            }
+    }
+
+
+    private fun deleteContact(contact: EmergencyContact) {
+        val user = FirebaseAuth.getInstance().currentUser ?: return
+        contact.id.let {
+            FirebaseDatabase.getInstance().reference
+                .child("emergency_contacts")
+                .child(user.uid)
+                .child(it)
+                .removeValue()
+                .addOnSuccessListener {
+                    Toast.makeText(this, "Contact deleted", Toast.LENGTH_SHORT).show()
+                }
+                .addOnFailureListener {
+                    Toast.makeText(this, "Failed to delete contact", Toast.LENGTH_SHORT).show()
+                }
+        }
+    }
+}
+
+data class EmergencyContact(
+    val name: String = "",
+    val phone: String = "",
+    var id: String = ""
+)
Index: app/src/main/java/com/pant/girly/AnonymousReportActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/pant/girly/AnonymousReportActivity.kt b/app/src/main/java/com/pant/girly/AnonymousReportActivity.kt
new file mode 100644
--- /dev/null	(date 1743961847216)
+++ b/app/src/main/java/com/pant/girly/AnonymousReportActivity.kt	(date 1743961847216)
@@ -0,0 +1,33 @@
+package com.pant.girly
+
+import android.annotation.SuppressLint
+import android.os.Bundle
+import android.widget.Button
+import android.widget.EditText
+import android.widget.Toast
+import androidx.appcompat.app.AppCompatActivity
+
+class AnonymousReportActivity : AppCompatActivity() {
+    private lateinit var reportInput: EditText
+    private lateinit var sendButton: Button
+
+    @SuppressLint("MissingInflatedId")
+    override fun onCreate(savedInstanceState: Bundle?) {
+        super.onCreate(savedInstanceState)
+        setContentView(R.layout.activity_anonymous_report)
+
+        reportInput = findViewById(R.id.reportInput)
+        sendButton = findViewById(R.id.sendReportButton)
+
+        sendButton.setOnClickListener {
+            val report = reportInput.text.toString()
+            if (report.isNotEmpty()) {
+                Toast.makeText(this, "Report Submitted Anonymously!", Toast.LENGTH_SHORT).show()
+                // TODO: Add Firebase anonymous report push here
+                reportInput.text.clear()
+            } else {
+                Toast.makeText(this, "Please write something!", Toast.LENGTH_SHORT).show()
+            }
+        }
+    }
+}
Index: app/src/main/java/com/pant/girly/ProfileOptionsAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/pant/girly/ProfileOptionsAdapter.kt b/app/src/main/java/com/pant/girly/ProfileOptionsAdapter.kt
new file mode 100644
--- /dev/null	(date 1743571053356)
+++ b/app/src/main/java/com/pant/girly/ProfileOptionsAdapter.kt	(date 1743571053356)
@@ -0,0 +1,37 @@
+package com.pant.girly
+
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import android.widget.ImageView
+import android.widget.TextView
+import androidx.recyclerview.widget.RecyclerView
+
+class ProfileOptionsAdapter(
+    private val options: List<ProfileOption>,
+    private val onClick: (ProfileOption) -> Unit
+) : RecyclerView.Adapter<ProfileOptionsAdapter.ViewHolder>() {
+
+    class ViewHolder(view: View) : RecyclerView.ViewHolder(view) {
+        val title: TextView = view.findViewById(R.id.tvOptionTitle)
+        val subtitle: TextView = view.findViewById(R.id.tvOptionSubtitle)
+        val icon: ImageView = view.findViewById(R.id.ivOptionIcon)
+    }
+
+    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ViewHolder {
+        val view = LayoutInflater.from(parent.context)
+            .inflate(R.layout.profile_option_item, parent, false)
+        return ViewHolder(view)
+    }
+
+    override fun onBindViewHolder(holder: ViewHolder, position: Int) {
+        val option = options[position]
+        holder.title.text = option.title
+        holder.subtitle.text = option.subtitle
+        holder.icon.setImageResource(option.iconRes)
+
+        holder.itemView.setOnClickListener { onClick(option) }
+    }
+
+    override fun getItemCount() = options.size
+}
Index: app/src/main/java/com/pant/girly/AppSettingsActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/pant/girly/AppSettingsActivity.kt b/app/src/main/java/com/pant/girly/AppSettingsActivity.kt
new file mode 100644
--- /dev/null	(date 1745090760321)
+++ b/app/src/main/java/com/pant/girly/AppSettingsActivity.kt	(date 1745090760321)
@@ -0,0 +1,150 @@
+package com.pant.girly
+
+import android.Manifest
+import android.content.Context
+import android.content.Intent
+import android.content.pm.PackageManager
+import android.os.Build
+import android.os.Bundle
+import android.widget.Toast
+import androidx.appcompat.app.AppCompatActivity
+import androidx.core.app.ActivityCompat
+import androidx.core.content.ContextCompat
+import com.google.firebase.auth.FirebaseAuth
+import com.google.firebase.database.*
+import com.pant.girly.databinding.AppSettingsActivityBinding
+
+class AppSettingsActivity : AppCompatActivity() {
+
+    private lateinit var binding: AppSettingsActivityBinding
+    private lateinit var auth: FirebaseAuth
+    private lateinit var database: FirebaseDatabase
+
+    override fun onCreate(savedInstanceState: Bundle?) {
+        super.onCreate(savedInstanceState)
+        binding = AppSettingsActivityBinding.inflate(layoutInflater)
+        setContentView(binding.root)
+
+        auth = FirebaseAuth.getInstance()
+        database = FirebaseDatabase.getInstance()
+
+        setSupportActionBar(binding.toolbar)
+        supportActionBar?.setDisplayHomeAsUpEnabled(true)
+        supportActionBar?.title = "App Settings"
+
+        // Load settings from Firebase
+        loadSettings()
+
+        // Save button
+        binding.btnSaveSettings.setOnClickListener { saveSettings() }
+        binding.btnViewHistory.setOnClickListener { loadLocationHistory() }
+
+        // Location toggle
+        binding.switchLocation.setOnCheckedChangeListener { _, isChecked ->
+            if (isChecked) enableLocationTracking()
+        }
+
+        // Shake detection toggle
+        binding.switchShakeDetection.setOnCheckedChangeListener { _, isChecked ->
+            if (isChecked) {
+                startShakeDetectionService()
+            } else {
+                stopShakeDetectionService()
+            }
+        }
+    }
+
+    private fun startShakeDetectionService() {
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q) {
+            if (ContextCompat.checkSelfPermission(this, Manifest.permission.ACTIVITY_RECOGNITION) != PackageManager.PERMISSION_GRANTED) {
+                ActivityCompat.requestPermissions(this, arrayOf(Manifest.permission.ACTIVITY_RECOGNITION), 101)
+                return
+            }
+        }
+
+        val serviceIntent = Intent(this, ForegroundShakeService::class.java)
+        ContextCompat.startForegroundService(this, serviceIntent)
+        showToast("Shake detection enabled")
+    }
+
+    private fun stopShakeDetectionService() {
+        val serviceIntent = Intent(this, ForegroundShakeService::class.java)
+        stopService(serviceIntent)
+        showToast("Shake detection disabled")
+    }
+
+    private fun enableLocationTracking() {
+        if (ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED) {
+            ActivityCompat.requestPermissions(this, arrayOf(Manifest.permission.ACCESS_FINE_LOCATION), 100)
+            return
+        }
+        showToast("Location tracking enabled!")
+    }
+
+    private fun loadSettings() {
+        val currentUser = auth.currentUser ?: return
+        val settingsRef = database.reference.child("settings").child(currentUser.uid)
+
+        settingsRef.addListenerForSingleValueEvent(object : ValueEventListener {
+            override fun onDataChange(snapshot: DataSnapshot) {
+                if (snapshot.exists()) {
+                    binding.switchNotifications.isChecked = snapshot.child("notifications").getValue(Boolean::class.java) ?: true
+                    binding.switchLocation.isChecked = snapshot.child("locationTracking").getValue(Boolean::class.java) ?: false
+                    binding.switchShakeDetection.isChecked = snapshot.child("shakeDetection").getValue(Boolean::class.java) ?: false
+                }
+            }
+
+            override fun onCancelled(error: DatabaseError) {
+                showToast("Failed to load settings: ${error.message}")
+            }
+        })
+    }
+
+    private fun saveSettings() {
+        val currentUser = auth.currentUser ?: return
+        val settings = mapOf(
+            "notifications" to binding.switchNotifications.isChecked,
+            "locationTracking" to binding.switchLocation.isChecked,
+            "shakeDetection" to binding.switchShakeDetection.isChecked
+        )
+
+        database.reference.child("settings").child(currentUser.uid)
+            .setValue(settings)
+            .addOnCompleteListener { task ->
+                if (task.isSuccessful) {
+                    showToast("Settings saved successfully!")
+                    finish()
+                } else {
+                    showToast("Error saving settings: ${task.exception?.message}")
+                }
+            }
+    }
+
+    private fun loadLocationHistory() {
+        val currentUser = auth.currentUser ?: return
+        database.reference.child("location_history").child(currentUser.uid)
+            .addListenerForSingleValueEvent(object : ValueEventListener {
+                override fun onDataChange(snapshot: DataSnapshot) {
+                    val historyList = mutableListOf<String>()
+                    snapshot.children.forEach { location ->
+                        val locationData = "Lat: ${location.child("latitude").value}, Lng: ${location.child("longitude").value}"
+                        historyList.add(locationData)
+                    }
+                    showToast("Location History: \n${historyList.joinToString("\n")}")
+                }
+
+                override fun onCancelled(error: DatabaseError) {
+                    showToast("Failed to load location history: ${error.message}")
+                }
+            })
+    }
+
+    override fun onSupportNavigateUp(): Boolean {
+        finish()
+        return true
+    }
+
+    private fun showToast(message: String) {
+        Toast.makeText(this, message, Toast.LENGTH_SHORT).show()
+    }
+}
Index: app/src/main/java/com/pant/girly/LiveVideoActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/pant/girly/LiveVideoActivity.kt b/app/src/main/java/com/pant/girly/LiveVideoActivity.kt
new file mode 100644
--- /dev/null	(date 1745349740346)
+++ b/app/src/main/java/com/pant/girly/LiveVideoActivity.kt	(date 1745349740346)
@@ -0,0 +1,289 @@
+package com.pant.girly
+
+import android.Manifest
+import android.content.Intent
+import android.content.pm.PackageManager
+import android.media.MediaRecorder
+import android.net.Uri
+import android.os.Bundle
+import android.os.Environment
+import android.util.Log
+import android.widget.Button
+import android.widget.ImageButton
+import android.widget.Switch
+import android.widget.Toast
+import androidx.appcompat.app.AppCompatActivity
+import androidx.camera.core.CameraSelector
+import androidx.camera.core.ImageCapture
+import androidx.camera.core.ImageCaptureException
+import androidx.camera.core.Preview
+import androidx.camera.lifecycle.ProcessCameraProvider
+import androidx.camera.view.PreviewView
+import androidx.core.app.ActivityCompat
+import androidx.core.content.ContextCompat
+import com.google.firebase.storage.FirebaseStorage
+import java.io.File
+import java.text.SimpleDateFormat
+import java.util.*
+import java.util.concurrent.ExecutorService
+import java.util.concurrent.Executors
+
+class LiveVideoActivity : AppCompatActivity() {
+
+    private lateinit var previewView: PreviewView
+    private lateinit var switchAudio: Switch
+    private lateinit var switchVideo: Switch
+    private lateinit var btnStartRecording: Button
+    private lateinit var btnStopRecording: Button
+    private lateinit var btnCaptureSnapshot: ImageButton
+
+    private lateinit var mediaRecorder: MediaRecorder
+    private var isAudioEnabled = false
+    private var isVideoEnabled = false
+    private var isRecording = false
+    private lateinit var imageCapture: ImageCapture
+    private lateinit var cameraExecutor: ExecutorService
+
+    override fun onCreate(savedInstanceState: Bundle?) {
+        super.onCreate(savedInstanceState)
+        setContentView(R.layout.activity_live_video)
+
+        previewView = findViewById(R.id.previewView)
+        switchAudio = findViewById(R.id.switchAudio)
+        switchVideo = findViewById(R.id.switchVideo)
+        btnStartRecording = findViewById(R.id.btnStartRecording)
+        btnStopRecording = findViewById(R.id.btnStopRecording)
+        btnCaptureSnapshot = findViewById(R.id.btnCaptureSnapshot)
+
+        cameraExecutor = Executors.newSingleThreadExecutor()
+
+        switchAudio.setOnCheckedChangeListener { _, isChecked ->
+            isAudioEnabled = isChecked
+        }
+
+        switchVideo.setOnCheckedChangeListener { _, isChecked ->
+            isVideoEnabled = isChecked
+            if (isChecked) startCamera()
+        }
+
+        btnStartRecording.setOnClickListener {
+            if (isAudioEnabled || isVideoEnabled) {
+                if (isVideoEnabled) startCamera()
+                startRecording()
+                notifyEmergencyContacts("Recording started")
+            } else {
+                Toast.makeText(this, "Enable Audio or Video first", Toast.LENGTH_SHORT).show()
+            }
+        }
+
+        btnStopRecording.setOnClickListener {
+            stopRecording()
+        }
+
+        btnCaptureSnapshot.setOnClickListener {
+            if (isVideoEnabled) {
+                takePhoto()
+            } else {
+                Toast.makeText(this, "Enable Video first", Toast.LENGTH_SHORT).show()
+            }
+        }
+
+        if (!checkPermissions()) {
+            requestPermissions()
+        }
+
+        // Auto-start if triggered from SOS
+        if (intent.getBooleanExtra("startRecording", false)) {
+            switchAudio.isChecked = true
+            switchVideo.isChecked = true
+            isAudioEnabled = true
+            isVideoEnabled = true
+            startCamera()
+            startRecording()
+            notifyEmergencyContacts("SOS Activated - Recording started")
+        }
+    }
+
+    private fun startCamera() {
+        val cameraProviderFuture = ProcessCameraProvider.getInstance(this)
+        cameraProviderFuture.addListener({
+            val cameraProvider = cameraProviderFuture.get()
+            val preview = Preview.Builder().build().also {
+                it.setSurfaceProvider(previewView.surfaceProvider)
+            }
+
+            imageCapture = ImageCapture.Builder()
+                .setCaptureMode(ImageCapture.CAPTURE_MODE_MINIMIZE_LATENCY)
+                .build()
+
+            try {
+                cameraProvider.unbindAll()
+                cameraProvider.bindToLifecycle(
+                    this,
+                    CameraSelector.DEFAULT_BACK_CAMERA,
+                    preview,
+                    imageCapture
+                )
+            } catch (e: Exception) {
+                Log.e("LiveVideo", "Camera binding failed", e)
+            }
+        }, ContextCompat.getMainExecutor(this))
+    }
+
+    private fun takePhoto() {
+        val photoFile = createImageFile()
+        val outputOptions = ImageCapture.OutputFileOptions.Builder(photoFile).build()
+
+        imageCapture.takePicture(
+            outputOptions,
+            cameraExecutor,
+            object : ImageCapture.OnImageSavedCallback {
+                override fun onImageSaved(outputFileResults: ImageCapture.OutputFileResults) {
+                    runOnUiThread {
+                        Toast.makeText(this@LiveVideoActivity,
+                            "Snapshot captured", Toast.LENGTH_SHORT).show()
+                        uploadToFirebase(photoFile)
+                        notifyEmergencyContacts("Snapshot captured at ${Date()}")
+                    }
+                }
+
+                override fun onError(exception: ImageCaptureException) {
+                    Log.e("LiveVideo", "Photo capture failed: ${exception.message}", exception)
+                    runOnUiThread {
+                        Toast.makeText(this@LiveVideoActivity,
+                            "Capture failed", Toast.LENGTH_SHORT).show()
+                    }
+                }
+            }
+        )
+    }
+
+    private fun createImageFile(): File {
+        val timeStamp = SimpleDateFormat("yyyyMMdd_HHmmss", Locale.getDefault()).format(Date())
+        val storageDir = getExternalFilesDir(Environment.DIRECTORY_PICTURES)
+        return File.createTempFile(
+            "JPEG_${timeStamp}_",
+            ".jpg",
+            storageDir
+        )
+    }
+
+    private fun startRecording() {
+        if (!checkPermissions()) {
+            requestPermissions()
+            return
+        }
+
+        val timestamp = SimpleDateFormat("yyyyMMdd_HHmmss", Locale.getDefault()).format(Date())
+        val outputFile = File(externalCacheDir, "recording_$timestamp.mp4")
+
+        mediaRecorder = MediaRecorder().apply {
+            if (isAudioEnabled) setAudioSource(MediaRecorder.AudioSource.MIC)
+            if (isVideoEnabled) setVideoSource(MediaRecorder.VideoSource.SURFACE)
+
+            setOutputFormat(MediaRecorder.OutputFormat.MPEG_4)
+            if (isVideoEnabled) setVideoEncoder(MediaRecorder.VideoEncoder.H264)
+            if (isAudioEnabled) setAudioEncoder(MediaRecorder.AudioEncoder.AAC)
+
+            setVideoFrameRate(30)
+            setVideoSize(1280, 720)
+            setOutputFile(outputFile.absolutePath)
+
+            try {
+                prepare()
+                start()
+                isRecording = true
+                Toast.makeText(this@LiveVideoActivity, "Recording started", Toast.LENGTH_SHORT).show()
+            } catch (e: Exception) {
+                Log.e("LiveVideo", "Recording failed: ${e.message}")
+                Toast.makeText(this@LiveVideoActivity, "Failed to start recording", Toast.LENGTH_SHORT).show()
+            }
+        }
+    }
+
+    private fun stopRecording() {
+        if (isRecording) {
+            try {
+                mediaRecorder.stop()
+                mediaRecorder.release()
+                isRecording = false
+                Toast.makeText(this, "Recording stopped", Toast.LENGTH_SHORT).show()
+            } catch (e: Exception) {
+                Log.e("LiveVideo", "Error stopping: ${e.message}")
+                Toast.makeText(this, "Stop failed", Toast.LENGTH_SHORT).show()
+            }
+        }
+    }
+
+    private fun uploadToFirebase(file: File) {
+        val storageRef = FirebaseStorage.getInstance().reference
+        val imageRef = storageRef.child("snapshots/${file.name}")
+
+        imageRef.putFile(Uri.fromFile(file))
+            .addOnSuccessListener {
+                Toast.makeText(this, "Snapshot uploaded", Toast.LENGTH_SHORT).show()
+            }
+            .addOnFailureListener { e ->
+                Log.e("LiveVideo", "Upload failed", e)
+            }
+    }
+
+    private fun notifyEmergencyContacts(message: String) {
+        // Replace with your actual contacts from Firebase
+        val contacts = listOf("9876543210", "9123456780")
+
+        contacts.forEach { number ->
+            val smsIntent = Intent(Intent.ACTION_SENDTO).apply {
+                data = Uri.parse("smsto:$number")
+                putExtra("sms_body", "Girly Safety Alert:\n$message\nLocation: [LAT],[LONG]")
+            }
+            startActivity(smsIntent)
+        }
+    }
+
+    private fun checkPermissions(): Boolean {
+        val audio = ContextCompat.checkSelfPermission(this, Manifest.permission.RECORD_AUDIO)
+        val video = ContextCompat.checkSelfPermission(this, Manifest.permission.CAMERA)
+        val storage = ContextCompat.checkSelfPermission(this, Manifest.permission.WRITE_EXTERNAL_STORAGE)
+        return audio == PackageManager.PERMISSION_GRANTED &&
+                video == PackageManager.PERMISSION_GRANTED &&
+                storage == PackageManager.PERMISSION_GRANTED
+    }
+
+    private fun requestPermissions() {
+        ActivityCompat.requestPermissions(
+            this,
+            arrayOf(
+                Manifest.permission.RECORD_AUDIO,
+                Manifest.permission.CAMERA,
+                Manifest.permission.WRITE_EXTERNAL_STORAGE
+            ),
+            PERMISSION_REQUEST_CODE
+        )
+    }
+
+    override fun onRequestPermissionsResult(
+        requestCode: Int,
+        permissions: Array<out String>,
+        grantResults: IntArray
+    ) {
+        super.onRequestPermissionsResult(requestCode, permissions, grantResults)
+        if (requestCode == PERMISSION_REQUEST_CODE) {
+            if (grantResults.all { it == PackageManager.PERMISSION_GRANTED }) {
+                Toast.makeText(this, "Permissions granted", Toast.LENGTH_SHORT).show()
+            } else {
+                Toast.makeText(this, "Permissions denied", Toast.LENGTH_SHORT).show()
+            }
+        }
+    }
+
+    override fun onDestroy() {
+        if (isRecording) stopRecording()
+        cameraExecutor.shutdown()
+        super.onDestroy()
+    }
+
+    companion object {
+        private const val PERMISSION_REQUEST_CODE = 101
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/pant/girly/SOSAlertsAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/pant/girly/SOSAlertsAdapter.kt b/app/src/main/java/com/pant/girly/SOSAlertsAdapter.kt
new file mode 100644
--- /dev/null	(date 1743527037366)
+++ b/app/src/main/java/com/pant/girly/SOSAlertsAdapter.kt	(date 1743527037366)
@@ -0,0 +1,54 @@
+package com.pant.girly
+
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import android.widget.TextView
+import androidx.recyclerview.widget.RecyclerView
+import java.text.SimpleDateFormat
+import java.util.*
+
+class SOSAlertsAdapter(private val alerts: List<SOSAlert>) :
+    RecyclerView.Adapter<SOSAlertsAdapter.SOSAlertViewHolder>() {
+
+    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): SOSAlertViewHolder {
+        val view = LayoutInflater.from(parent.context)
+            .inflate(R.layout.item_sos_alert, parent, false)
+        return SOSAlertViewHolder(view)
+    }
+
+    override fun onBindViewHolder(holder: SOSAlertViewHolder, position: Int) {
+        val alert = alerts[position]
+        holder.bind(alert)
+    }
+
+    override fun getItemCount() = alerts.size
+
+    class SOSAlertViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView) {
+        private val tvTime: TextView = itemView.findViewById(R.id.tvTime)
+        private val tvLocation: TextView = itemView.findViewById(R.id.tvLocation)
+        private val tvStatus: TextView = itemView.findViewById(R.id.tvStatus)
+
+        fun bind(alert: SOSAlert) {
+            // Format timestamp
+            val dateFormat = SimpleDateFormat("dd MMM yyyy, hh:mm a", Locale.getDefault())
+            val date = Date(alert.timestamp)
+            tvTime.text = dateFormat.format(date)
+
+            tvLocation.text = alert.location
+            tvStatus.text = when(alert.status) {
+                "pending" -> "Pending Response"
+                "responded" -> "Responded"
+                else -> "Alert Sent"
+            }
+
+            // Set status color
+            val statusColor = when(alert.status) {
+                "pending" -> itemView.context.getColor(R.color.red)
+                "responded" -> itemView.context.getColor(R.color.green)
+                else -> itemView.context.getColor(R.color.orange)
+            }
+            tvStatus.setTextColor(statusColor)
+        }
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/pant/girly/UserFormActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/pant/girly/UserFormActivity.kt b/app/src/main/java/com/pant/girly/UserFormActivity.kt
new file mode 100644
--- /dev/null	(date 1744874061643)
+++ b/app/src/main/java/com/pant/girly/UserFormActivity.kt	(date 1744874061643)
@@ -0,0 +1,140 @@
+package com.pant.girly
+
+import android.annotation.SuppressLint
+import android.app.Activity
+import android.content.Intent
+import android.net.Uri
+import android.os.Bundle
+import android.widget.*
+import androidx.activity.result.ActivityResultLauncher
+import androidx.activity.result.contract.ActivityResultContracts
+import androidx.appcompat.app.AppCompatActivity
+import com.google.firebase.auth.FirebaseAuth
+import com.google.firebase.database.DatabaseReference
+import com.google.firebase.database.FirebaseDatabase
+import com.google.firebase.storage.FirebaseStorage
+import com.google.firebase.storage.StorageReference
+
+class UserFormActivity : AppCompatActivity() {
+
+    private lateinit var nameEditText: EditText
+    private lateinit var ageEditText: EditText
+    private lateinit var educationEditText: EditText
+    private lateinit var cityEditText: EditText
+    private lateinit var stateEditText: EditText
+    private lateinit var profileImageView: ImageView
+    private lateinit var uploadButton: Button
+    private lateinit var submitButton: Button
+
+    private lateinit var database: DatabaseReference
+    private lateinit var auth: FirebaseAuth
+    private lateinit var storageRef: StorageReference
+    private var imageUri: Uri? = null
+    private lateinit var imagePickerLauncher: ActivityResultLauncher<Intent>
+
+    @SuppressLint("MissingInflatedId")
+    override fun onCreate(savedInstanceState: Bundle?) {
+        super.onCreate(savedInstanceState)
+        setContentView(R.layout.activity_user_form)
+
+        auth = FirebaseAuth.getInstance()
+        database = FirebaseDatabase.getInstance().reference.child("Users")
+        storageRef = FirebaseStorage.getInstance().reference.child("profile_images")
+
+        nameEditText = findViewById(R.id.editTextName)
+        ageEditText = findViewById(R.id.editTextAge)
+        educationEditText = findViewById(R.id.editTextEducation)
+        cityEditText = findViewById(R.id.editTextCity)
+        stateEditText = findViewById(R.id.editTextState)
+        profileImageView = findViewById(R.id.profileImageView)
+        uploadButton = findViewById(R.id.buttonUpload)
+        submitButton = findViewById(R.id.buttonSubmit)
+
+        imagePickerLauncher = registerForActivityResult(ActivityResultContracts.StartActivityForResult()) { result ->
+            if (result.resultCode == Activity.RESULT_OK && result.data != null) {
+                imageUri = result.data?.data
+                profileImageView.setImageURI(imageUri)
+            }
+        }
+
+        uploadButton.setOnClickListener {
+            openImageChooser()
+        }
+
+        submitButton.setOnClickListener {
+            saveUserData()
+        }
+    }
+
+    private fun openImageChooser() {
+        val intent = Intent(Intent.ACTION_GET_CONTENT)
+        intent.type = "image/*"
+        imagePickerLauncher.launch(intent)
+    }
+
+    private fun saveUserData() {
+        val name = nameEditText.text.toString().trim()
+        val age = ageEditText.text.toString().trim()
+        val education = educationEditText.text.toString().trim()
+        val city = cityEditText.text.toString().trim()
+        val state = stateEditText.text.toString().trim()
+
+        if (name.isEmpty() || age.isEmpty() || education.isEmpty() || city.isEmpty() || state.isEmpty()) {
+            Toast.makeText(this, "Please fill all fields", Toast.LENGTH_SHORT).show()
+            return
+        }
+
+        val userId = auth.currentUser?.uid ?: return
+        val userRef = database.child(userId)
+
+        if (imageUri != null) {
+            val profileImageRef = storageRef.child("$userId.jpg")
+            profileImageRef.putFile(imageUri!!)
+                .addOnSuccessListener { taskSnapshot ->
+                    profileImageRef.downloadUrl.addOnSuccessListener { downloadUri ->
+                        val userData = mapOf(
+                            "name" to name,
+                            "age" to age,
+                            "education" to education,
+                            "city" to city,
+                            "state" to state,
+                            "profileImageUrl" to downloadUri.toString()
+                        )
+                        userRef.setValue(userData)
+                            .addOnSuccessListener {
+                                Toast.makeText(this, "Profile Updated!", Toast.LENGTH_SHORT).show()
+                                goToProfile()
+                            }
+                            .addOnFailureListener {
+                                Toast.makeText(this, "Failed to update data", Toast.LENGTH_SHORT).show()
+                            }
+                    }
+                }
+                .addOnFailureListener {
+                    Toast.makeText(this, "Failed to upload image", Toast.LENGTH_SHORT).show()
+                }
+        } else {
+            val userData = mapOf(
+                "name" to name,
+                "age" to age,
+                "education" to education,
+                "city" to city,
+                "state" to state
+            )
+            userRef.setValue(userData)
+                .addOnSuccessListener {
+                    Toast.makeText(this, "Profile Updated!", Toast.LENGTH_SHORT).show()
+                    goToProfile()
+                }
+                .addOnFailureListener {
+                    Toast.makeText(this, "Failed to update data", Toast.LENGTH_SHORT).show()
+                }
+        }
+    }
+
+    private fun goToProfile() {
+        val intent = Intent(this, MainActivity::class.java)
+        startActivity(intent)
+        finish()
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/pant/girly/OTPVerificationActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/pant/girly/OTPVerificationActivity.kt b/app/src/main/java/com/pant/girly/OTPVerificationActivity.kt
new file mode 100644
--- /dev/null	(date 1743446615823)
+++ b/app/src/main/java/com/pant/girly/OTPVerificationActivity.kt	(date 1743446615823)
@@ -0,0 +1,115 @@
+package com.pant.girly
+
+import android.annotation.SuppressLint
+import android.content.Intent
+import android.os.Bundle
+import android.text.TextUtils
+import android.widget.Button
+import android.widget.EditText
+import android.widget.Toast
+import androidx.appcompat.app.AppCompatActivity
+import com.google.firebase.FirebaseException
+import com.google.firebase.auth.*
+import com.google.firebase.firestore.FirebaseFirestore
+import java.util.concurrent.TimeUnit
+
+class OTPVerificationActivity : AppCompatActivity() {
+
+    private lateinit var etOtp: EditText
+    private lateinit var btnVerifyOtp: Button
+    private lateinit var btnVerifyEmail: Button
+    private lateinit var mAuth: FirebaseAuth
+    private lateinit var db: FirebaseFirestore
+
+    private var mobile: String? = null
+    private var email: String? = null
+    private var verificationId: String? = null
+
+    @SuppressLint("MissingInflatedId")
+    override fun onCreate(savedInstanceState: Bundle?) {
+        super.onCreate(savedInstanceState)
+        setContentView(R.layout.activity_otp_verification)
+
+        etOtp = findViewById(R.id.etOtp)
+        btnVerifyOtp = findViewById(R.id.btnVerifyOtp)
+        btnVerifyEmail = findViewById(R.id.btnVerifyEmail)
+
+        mAuth = FirebaseAuth.getInstance()
+        db = FirebaseFirestore.getInstance()
+
+        email = intent.getStringExtra("email")
+        mobile = intent.getStringExtra("mobile")
+
+        mobile?.let { sendOtpToMobile(it) }
+
+        btnVerifyOtp.setOnClickListener {
+            val otp = etOtp.text.toString().trim()
+            if (TextUtils.isEmpty(otp)) {
+                Toast.makeText(this, "Enter OTP", Toast.LENGTH_SHORT).show()
+                return@setOnClickListener
+            }
+            verifyOtp(otp)
+        }
+
+        btnVerifyEmail.setOnClickListener {
+            createUserInDatabase(email, mobile)
+        }
+    }
+
+    private fun sendOtpToMobile(mobile: String) {
+        PhoneAuthProvider.getInstance().verifyPhoneNumber(
+            "+91$mobile",
+            60,
+            TimeUnit.SECONDS,
+            this,
+            object : PhoneAuthProvider.OnVerificationStateChangedCallbacks() {
+                override fun onVerificationCompleted(credential: PhoneAuthCredential) {
+                    Toast.makeText(this@OTPVerificationActivity, "Auto-verification completed", Toast.LENGTH_SHORT).show()
+                }
+
+                override fun onVerificationFailed(e: FirebaseException) {
+                    Toast.makeText(this@OTPVerificationActivity, "OTP Failed: ${e.message}", Toast.LENGTH_SHORT).show()
+                }
+
+                override fun onCodeSent(id: String, token: PhoneAuthProvider.ForceResendingToken) {
+                    verificationId = id
+                }
+            }
+        )
+    }
+
+    private fun verifyOtp(otp: String) {
+        verificationId?.let { id ->
+            val credential = PhoneAuthProvider.getCredential(id, otp)
+            mAuth.signInWithCredential(credential)
+                .addOnCompleteListener { task ->
+                    if (task.isSuccessful) {
+                        createUserInDatabase(email, mobile)
+                    } else {
+                        Toast.makeText(this, "Invalid OTP", Toast.LENGTH_SHORT).show()
+                    }
+                }
+        }
+    }
+
+    private fun createUserInDatabase(email: String?, mobile: String?) {
+        val user = mAuth.currentUser
+        user?.let {
+            val userId = it.uid
+            val userData = hashMapOf(
+                "email" to email,
+                "mobile" to mobile
+            )
+
+            db.collection("users").document(userId).set(userData)
+                .addOnSuccessListener {
+                    Toast.makeText(this, "Sign-up Successful!", Toast.LENGTH_SHORT).show()
+                    startActivity(Intent(this, MainActivity::class.java))
+                    finish()
+                }
+                .addOnFailureListener { e ->
+                    Toast.makeText(this, "Error: ${e.message}", Toast.LENGTH_SHORT).show()
+                }
+        }
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/pant/girly/ProfileOption.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/pant/girly/ProfileOption.kt b/app/src/main/java/com/pant/girly/ProfileOption.kt
new file mode 100644
--- /dev/null	(date 1743571026715)
+++ b/app/src/main/java/com/pant/girly/ProfileOption.kt	(date 1743571026715)
@@ -0,0 +1,12 @@
+package com.pant.girly
+
+data class ProfileOption(
+    val title: String,
+    val subtitle: String,
+    val iconRes: Int,
+    val type: ProfileOptionType
+)
+
+enum class ProfileOptionType {
+    USER_INFO, SOS_ALERTS, EMERGENCY_CONTACTS, REGISTERED_ADDRESS, APP_SETTINGS, LOGOUT
+}
Index: app/src/main/java/com/pant/girly/ForgotPasswordActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/pant/girly/ForgotPasswordActivity.kt b/app/src/main/java/com/pant/girly/ForgotPasswordActivity.kt
new file mode 100644
--- /dev/null	(date 1744960903703)
+++ b/app/src/main/java/com/pant/girly/ForgotPasswordActivity.kt	(date 1744960903703)
@@ -0,0 +1,51 @@
+package com.pant.girly
+
+import android.annotation.SuppressLint
+import android.os.Bundle
+import android.view.View
+import android.widget.Button
+import android.widget.EditText
+import android.widget.ProgressBar
+import android.widget.Toast
+import androidx.appcompat.app.AppCompatActivity
+import com.google.firebase.auth.FirebaseAuth
+
+class ForgotPasswordActivity : AppCompatActivity() {
+
+    private lateinit var emailField: EditText
+    private lateinit var resetPasswordButton: Button
+    private lateinit var progressBar: ProgressBar
+    private lateinit var auth: FirebaseAuth
+
+    @SuppressLint("MissingInflatedId")
+    override fun onCreate(savedInstanceState: Bundle?) {
+        super.onCreate(savedInstanceState)
+        setContentView(R.layout.activity_forgot_password)
+
+        emailField = findViewById(R.id.emailField)
+        resetPasswordButton = findViewById(R.id.resetPasswordButton)
+        progressBar = findViewById(R.id.progressBar)
+        auth = FirebaseAuth.getInstance()
+
+        resetPasswordButton.setOnClickListener {
+            val email = emailField.text.toString().trim()
+
+            if (email.isEmpty()) {
+                Toast.makeText(this, "Please enter your email", Toast.LENGTH_SHORT).show()
+                return@setOnClickListener
+            }
+
+            progressBar.visibility = View.VISIBLE
+            auth.sendPasswordResetEmail(email)
+                .addOnCompleteListener { task ->
+                    progressBar.visibility = View.GONE
+                    if (task.isSuccessful) {
+                        Toast.makeText(this, "Password reset link sent to your email", Toast.LENGTH_LONG).show()
+                        finish()
+                    } else {
+                        Toast.makeText(this, "Failed to send reset email: ${task.exception?.message}", Toast.LENGTH_SHORT).show()
+                    }
+                }
+        }
+    }
+}
\ No newline at end of file
Index: app/src/main/res/anim/slide_out_left.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/anim/slide_out_left.xml b/app/src/main/res/anim/slide_out_left.xml
new file mode 100644
--- /dev/null	(date 1745353310344)
+++ b/app/src/main/res/anim/slide_out_left.xml	(date 1745353310344)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="utf-8"?>
+<set xmlns:android="http://schemas.android.com/apk/res/android">
+    <translate
+        android:duration="300"
+        android:fromXDelta="0%"
+        android:toXDelta="-100%"
+        android:interpolator="@android:anim/decelerate_interpolator"/>
+</set>
\ No newline at end of file
Index: app/src/main/res/anim/slide_in_right.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/anim/slide_in_right.xml b/app/src/main/res/anim/slide_in_right.xml
new file mode 100644
--- /dev/null	(date 1745353316258)
+++ b/app/src/main/res/anim/slide_in_right.xml	(date 1745353316258)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="utf-8"?>
+<set xmlns:android="http://schemas.android.com/apk/res/android">
+    <translate
+        android:duration="300"
+        android:fromXDelta="100%"
+        android:toXDelta="0%"
+        android:interpolator="@android:anim/decelerate_interpolator"/>
+</set>
\ No newline at end of file
Index: app/src/main/res/anim/slide_out_right.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/anim/slide_out_right.xml b/app/src/main/res/anim/slide_out_right.xml
new file mode 100644
--- /dev/null	(date 1745353294726)
+++ b/app/src/main/res/anim/slide_out_right.xml	(date 1745353294726)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="utf-8"?>
+<set xmlns:android="http://schemas.android.com/apk/res/android">
+    <translate
+        android:duration="300"
+        android:fromXDelta="0%"
+        android:toXDelta="100%"
+        android:interpolator="@android:anim/decelerate_interpolator"/>
+</set>
\ No newline at end of file
Index: app/src/main/res/anim/slide_in_left.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/anim/slide_in_left.xml b/app/src/main/res/anim/slide_in_left.xml
new file mode 100644
--- /dev/null	(date 1745353300516)
+++ b/app/src/main/res/anim/slide_in_left.xml	(date 1745353300516)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="utf-8"?>
+<set xmlns:android="http://schemas.android.com/apk/res/android">
+    <translate
+        android:duration="300"
+        android:fromXDelta="-100%"
+        android:toXDelta="0%"
+        android:interpolator="@android:anim/decelerate_interpolator"/>
+</set>
\ No newline at end of file
Index: app/src/main/res/drawable/circle_button_bg.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/circle_button_bg.xml b/app/src/main/res/drawable/circle_button_bg.xml
new file mode 100644
--- /dev/null	(date 1745349362831)
+++ b/app/src/main/res/drawable/circle_button_bg.xml	(date 1745349362831)
@@ -0,0 +1,5 @@
+<shape xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shape="oval">
+    <solid android:color="@color/deep_pink" />
+    <stroke android:width="2dp" android:color="@android:color/white" />
+</shape>
\ No newline at end of file
Index: app/src/main/res/xml/file_paths.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/xml/file_paths.xml b/app/src/main/res/xml/file_paths.xml
new file mode 100644
--- /dev/null	(date 1745349516414)
+++ b/app/src/main/res/xml/file_paths.xml	(date 1745349516414)
@@ -0,0 +1,4 @@
+<?xml version="1.0" encoding="utf-8"?>
+<paths>
+    <external-files-path name="images" path="Pictures/" />
+</paths>
\ No newline at end of file
Index: app/src/main/res/drawable/ic_camera.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/ic_camera.xml b/app/src/main/res/drawable/ic_camera.xml
new file mode 100644
--- /dev/null	(date 1745349389985)
+++ b/app/src/main/res/drawable/ic_camera.xml	(date 1745349389985)
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24">
+    <path
+        android:fillColor="@android:color/white"
+        android:pathData="M12,8c-2.21,0 -4,1.79 -4,4s1.79,4 4,4 4,-1.79 4,-4 -1.79,-4 -4,-4zm-7,7H3v4c0,1.1 0.9,2 2,2h4v-2H5v-4zM5,5h4V3H5c-1.1,0 -2,0.9 -2,2v4h2V5zm14,-2h-4v2h4v4h2V5c0,-1.1 -0.9,-2 -2,-2zm0,16h-4v2h4c1.1,0 2,-0.9 2,-2v-4h-2v4z" />
+</vector>
\ No newline at end of file
